{
  "version": 3,
  "sources": ["../../../node_modules/jsmind/src/jsmind.common.js", "../../../node_modules/jsmind/src/jsmind.dom.js", "../../../node_modules/jsmind/src/jsmind.util.js", "../../../node_modules/jsmind/src/jsmind.option.js", "../../../node_modules/jsmind/src/jsmind.node.js", "../../../node_modules/jsmind/src/jsmind.mind.js", "../../../node_modules/jsmind/src/jsmind.format.js", "../../../node_modules/jsmind/src/jsmind.data_provider.js", "../../../node_modules/jsmind/src/jsmind.layout_provider.js", "../../../node_modules/jsmind/src/jsmind.graph.js", "../../../node_modules/jsmind/src/jsmind.view_provider.js", "../../../node_modules/jsmind/src/jsmind.shortcut_provider.js", "../../../node_modules/jsmind/src/jsmind.plugin.js", "../../../node_modules/jsmind/src/jsmind.js"],
  "sourcesContent": ["/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nexport const __version__ = '0.8.6';\nexport const __author__ = 'hizzgdev@163.com';\n\nif (typeof String.prototype.startsWith != 'function') {\n    String.prototype.startsWith = function (p) {\n        return this.slice(0, p.length) === p;\n    };\n}\n\nexport const Direction = {\n    left: -1,\n    center: 0,\n    right: 1,\n    of: function (dir) {\n        if (!dir || dir === -1 || dir === 0 || dir === 1) {\n            return dir;\n        }\n        if (dir === '-1' || dir === '0' || dir === '1') {\n            return parseInt(dir);\n        }\n        if (dir.toLowerCase() === 'left') {\n            return this.left;\n        }\n        if (dir.toLowerCase() === 'right') {\n            return this.right;\n        }\n        if (dir.toLowerCase() === 'center') {\n            return this.center;\n        }\n    },\n};\nexport const EventType = { show: 1, resize: 2, edit: 3, select: 4 };\nexport const Key = { meta: 1 << 13, ctrl: 1 << 12, alt: 1 << 11, shift: 1 << 10 };\nexport const LogLevel = { debug: 1, info: 2, warn: 3, error: 4, disable: 9 };\n\n// an noop function define\nvar _noop = function () {};\nexport let logger =\n    typeof console === 'undefined'\n        ? {\n              level: _noop,\n              log: _noop,\n              debug: _noop,\n              info: _noop,\n              warn: _noop,\n              error: _noop,\n          }\n        : {\n              level: setup_logger_level,\n              log: console.log,\n              debug: console.debug,\n              info: console.info,\n              warn: console.warn,\n              error: console.error,\n          };\n\nfunction setup_logger_level(log_level) {\n    if (log_level > LogLevel.debug) {\n        logger.debug = _noop;\n    } else {\n        logger.debug = console.debug;\n    }\n    if (log_level > LogLevel.info) {\n        logger.info = _noop;\n    } else {\n        logger.info = console.info;\n    }\n    if (log_level > LogLevel.warn) {\n        logger.warn = _noop;\n    } else {\n        logger.warn = console.warn;\n    }\n    if (log_level > LogLevel.error) {\n        logger.error = _noop;\n    } else {\n        logger.error = console.error;\n    }\n}\n", "/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nclass Dom {\n    constructor(w) {\n        this.w = w;\n        this.d = w.document;\n        this.g = function (id) {\n            return this.d.getElementById(id);\n        };\n        this.c = function (tag) {\n            return this.d.createElement(tag);\n        };\n        this.t = function (n, t) {\n            if (n.hasChildNodes()) {\n                n.firstChild.nodeValue = t;\n            } else {\n                n.appendChild(this.d.createTextNode(t));\n            }\n        };\n\n        this.h = function (n, t) {\n            if (t instanceof HTMLElement) {\n                n.innerHTML = '';\n                n.appendChild(t);\n            } else {\n                n.innerHTML = t;\n            }\n        };\n        // detect isElement\n        this.i = function (el) {\n            return (\n                !!el &&\n                typeof el === 'object' &&\n                el.nodeType === 1 &&\n                typeof el.style === 'object' &&\n                typeof el.ownerDocument === 'object'\n            );\n        };\n\n        //target,eventType,handler\n        this.on = function (t, e, h) {\n            if (!!t.addEventListener) {\n                t.addEventListener(e, h, false);\n            } else {\n                t.attachEvent('on' + e, h);\n            }\n        };\n    }\n}\n\nexport const $ = new Dom(window);\n", "/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { $ } from './jsmind.dom.js';\n\nexport const util = {\n    file: {\n        read: function (file_data, fn_callback) {\n            var reader = new FileReader();\n            reader.onload = function () {\n                if (typeof fn_callback === 'function') {\n                    fn_callback(this.result, file_data.name);\n                }\n            };\n            reader.readAsText(file_data);\n        },\n\n        save: function (file_data, type, name) {\n            var blob;\n            if (typeof $.w.Blob === 'function') {\n                blob = new Blob([file_data], { type: type });\n            } else {\n                var BlobBuilder =\n                    $.w.BlobBuilder ||\n                    $.w.MozBlobBuilder ||\n                    $.w.WebKitBlobBuilder ||\n                    $.w.MSBlobBuilder;\n                var bb = new BlobBuilder();\n                bb.append(file_data);\n                blob = bb.getBlob(type);\n            }\n            if (navigator.msSaveBlob) {\n                navigator.msSaveBlob(blob, name);\n            } else {\n                var URL = $.w.URL || $.w.webkitURL;\n                var blob_url = URL.createObjectURL(blob);\n                var anchor = $.c('a');\n                if ('download' in anchor) {\n                    anchor.style.visibility = 'hidden';\n                    anchor.href = blob_url;\n                    anchor.download = name;\n                    $.d.body.appendChild(anchor);\n                    var evt = $.d.createEvent('MouseEvents');\n                    evt.initEvent('click', true, true);\n                    anchor.dispatchEvent(evt);\n                    $.d.body.removeChild(anchor);\n                } else {\n                    location.href = blob_url;\n                }\n            }\n        },\n    },\n\n    json: {\n        json2string: function (json) {\n            return JSON.stringify(json);\n        },\n        string2json: function (json_str) {\n            return JSON.parse(json_str);\n        },\n        merge: function (b, a) {\n            for (var o in a) {\n                if (o in b) {\n                    if (\n                        typeof b[o] === 'object' &&\n                        Object.prototype.toString.call(b[o]).toLowerCase() == '[object object]' &&\n                        !b[o].length\n                    ) {\n                        util.json.merge(b[o], a[o]);\n                    } else {\n                        b[o] = a[o];\n                    }\n                } else {\n                    b[o] = a[o];\n                }\n            }\n            return b;\n        },\n    },\n\n    uuid: {\n        newid: function () {\n            return (\n                new Date().getTime().toString(16) + Math.random().toString(16).substring(2)\n            ).substring(2, 18);\n        },\n    },\n\n    text: {\n        is_empty: function (s) {\n            if (!s) {\n                return true;\n            }\n            return s.replace(/\\s*/, '').length == 0;\n        },\n    },\n};\n", "/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { util } from './jsmind.util.js';\n\nconst default_options = {\n    container: '', // id of the container\n    editable: false, // you can change it in your options\n    theme: null,\n    mode: 'full', // full or side\n    support_html: true,\n    log_level: 'info',\n\n    view: {\n        engine: 'canvas',\n        enable_device_pixel_ratio: false,\n        hmargin: 100,\n        vmargin: 50,\n        line_width: 2,\n        line_color: '#555',\n        line_style: 'curved', // [straight | curved]\n        draggable: false, // drag the mind map with your mouse, when it's larger that the container\n        hide_scrollbars_when_draggable: false, // hide container scrollbars, when mind map is larger than container and draggable option is true.\n        node_overflow: 'hidden', // [hidden | wrap]\n        zoom: {\n            min: 0.5,\n            max: 2.1,\n            step: 0.1,\n        },\n        custom_node_render: null,\n        expander_style: 'char', // [char | number]\n    },\n    layout: {\n        hspace: 30,\n        vspace: 20,\n        pspace: 13,\n        cousin_space: 0,\n    },\n    default_event_handle: {\n        enable_mousedown_handle: true,\n        enable_click_handle: true,\n        enable_dblclick_handle: true,\n        enable_mousewheel_handle: true,\n    },\n    shortcut: {\n        enable: true,\n        handles: {},\n        mapping: {\n            addchild: [45, 4096 + 13], // Insert, Ctrl+Enter\n            addbrother: 13, // Enter\n            editnode: 113, // F2\n            delnode: 46, // Delete\n            toggle: 32, // Space\n            left: 37, // Left\n            up: 38, // Up\n            right: 39, // Right\n            down: 40, // Down\n        },\n    },\n    plugin: {},\n};\n\nexport function merge_option(options) {\n    var opts = {};\n    util.json.merge(opts, default_options);\n    util.json.merge(opts, options);\n\n    if (!opts.container) {\n        throw new Error('the options.container should not be null or empty.');\n    }\n    return opts;\n}\n", "/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { logger } from './jsmind.common.js';\nexport class Node {\n    constructor(sId, iIndex, sTopic, oData, bIsRoot, oParent, eDirection, bExpanded) {\n        if (!sId) {\n            logger.error('invalid node id');\n            return;\n        }\n        if (typeof iIndex != 'number') {\n            logger.error('invalid node index');\n            return;\n        }\n        if (typeof bExpanded === 'undefined') {\n            bExpanded = true;\n        }\n        this.id = sId;\n        this.index = iIndex;\n        this.topic = sTopic;\n        this.data = oData || {};\n        this.isroot = bIsRoot;\n        this.parent = oParent;\n        this.direction = eDirection;\n        this.expanded = !!bExpanded;\n        this.children = [];\n        this._data = {};\n    }\n\n    get_location() {\n        var vd = this._data.view;\n        return {\n            x: vd.abs_x,\n            y: vd.abs_y,\n        };\n    }\n    get_size() {\n        var vd = this._data.view;\n        return {\n            w: vd.width,\n            h: vd.height,\n        };\n    }\n\n    static compare(node1, node2) {\n        // '-1' is always the latest\n        var r = 0;\n        var i1 = node1.index;\n        var i2 = node2.index;\n        if (i1 >= 0 && i2 >= 0) {\n            r = i1 - i2;\n        } else if (i1 == -1 && i2 == -1) {\n            r = 0;\n        } else if (i1 == -1) {\n            r = 1;\n        } else if (i2 == -1) {\n            r = -1;\n        } else {\n            r = 0;\n        }\n        return r;\n    }\n    static inherited(parent_node, node) {\n        if (!!parent_node && !!node) {\n            if (parent_node.id === node.id) {\n                return true;\n            }\n            if (parent_node.isroot) {\n                return true;\n            }\n            var pid = parent_node.id;\n            var p = node;\n            while (!p.isroot) {\n                p = p.parent;\n                if (p.id === pid) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    static is_node(n) {\n        return !!n && n instanceof Node;\n    }\n}\n", "/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { Node } from './jsmind.node.js';\nimport { logger, Direction } from './jsmind.common.js';\n\nexport class Mind {\n    constructor() {\n        this.name = null;\n        this.author = null;\n        this.version = null;\n        this.root = null;\n        this.selected = null;\n        this.nodes = {};\n    }\n    get_node(node_id) {\n        if (node_id in this.nodes) {\n            return this.nodes[node_id];\n        } else {\n            logger.warn('the node[id=' + node_id + '] can not be found');\n            return null;\n        }\n    }\n    set_root(node_id, topic, data) {\n        if (this.root == null) {\n            this.root = new Node(node_id, 0, topic, data, true);\n            this._put_node(this.root);\n            return this.root;\n        } else {\n            logger.error('root node is already exist');\n            return null;\n        }\n    }\n    add_node(parent_node, node_id, topic, data, direction, expanded, idx) {\n        if (!Node.is_node(parent_node)) {\n            logger.error('the parent_node ' + parent_node + ' is not a node.');\n            return null;\n        }\n        var node_index = idx || -1;\n        var node = new Node(\n            node_id,\n            node_index,\n            topic,\n            data,\n            false,\n            parent_node,\n            parent_node.direction,\n            expanded\n        );\n        if (parent_node.isroot) {\n            node.direction = direction || Direction.right;\n        }\n        if (this._put_node(node)) {\n            parent_node.children.push(node);\n            this._update_index(parent_node);\n        } else {\n            logger.error(\"fail, the node id '\" + node.id + \"' has been already exist.\");\n            node = null;\n        }\n        return node;\n    }\n    insert_node_before(node_before, node_id, topic, data, direction) {\n        if (!Node.is_node(node_before)) {\n            logger.error('the node_before ' + node_before + ' is not a node.');\n            return null;\n        }\n        var node_index = node_before.index - 0.5;\n        return this.add_node(node_before.parent, node_id, topic, data, direction, true, node_index);\n    }\n    get_node_before(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return null;\n            } else {\n                return this.get_node_before(the_node);\n            }\n        }\n        if (node.isroot) {\n            return null;\n        }\n        var idx = node.index - 2;\n        if (idx >= 0) {\n            return node.parent.children[idx];\n        } else {\n            return null;\n        }\n    }\n    insert_node_after(node_after, node_id, topic, data, direction) {\n        if (!Node.is_node(node_after)) {\n            logger.error('the node_after ' + node_after + ' is not a node.');\n            return null;\n        }\n        var node_index = node_after.index + 0.5;\n        return this.add_node(node_after.parent, node_id, topic, data, direction, true, node_index);\n    }\n    get_node_after(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return null;\n            } else {\n                return this.get_node_after(the_node);\n            }\n        }\n        if (node.isroot) {\n            return null;\n        }\n        var idx = node.index;\n        var brothers = node.parent.children;\n        if (brothers.length > idx) {\n            return node.parent.children[idx];\n        } else {\n            return null;\n        }\n    }\n    move_node(node, before_id, parent_id, direction) {\n        if (!Node.is_node(node)) {\n            logger.error('the parameter node ' + node + ' is not a node.');\n            return null;\n        }\n        if (!parent_id) {\n            parent_id = node.parent.id;\n        }\n        return this._move_node(node, before_id, parent_id, direction);\n    }\n    _flow_node_direction(node, direction) {\n        if (typeof direction === 'undefined') {\n            direction = node.direction;\n        } else {\n            node.direction = direction;\n        }\n        var len = node.children.length;\n        while (len--) {\n            this._flow_node_direction(node.children[len], direction);\n        }\n    }\n    _move_node_internal(node, before_id) {\n        if (!!node && !!before_id) {\n            if (before_id == '_last_') {\n                node.index = -1;\n                this._update_index(node.parent);\n            } else if (before_id == '_first_') {\n                node.index = 0;\n                this._update_index(node.parent);\n            } else {\n                var node_before = !!before_id ? this.get_node(before_id) : null;\n                if (\n                    node_before != null &&\n                    node_before.parent != null &&\n                    node_before.parent.id == node.parent.id\n                ) {\n                    node.index = node_before.index - 0.5;\n                    this._update_index(node.parent);\n                }\n            }\n        }\n        return node;\n    }\n    _move_node(node, before_id, parent_id, direction) {\n        if (!!node && !!parent_id) {\n            var parent_node = this.get_node(parent_id);\n            if (Node.inherited(node, parent_node)) {\n                logger.error('can not move a node to its children');\n                return null;\n            }\n            if (node.parent.id != parent_id) {\n                // remove from parent's children\n                var sibling = node.parent.children;\n                var si = sibling.length;\n                while (si--) {\n                    if (sibling[si].id == node.id) {\n                        sibling.splice(si, 1);\n                        break;\n                    }\n                }\n                let origin_parent = node.parent;\n                node.parent = parent_node;\n                parent_node.children.push(node);\n                this._update_index(origin_parent);\n            }\n\n            if (node.parent.isroot) {\n                if (direction == Direction.left) {\n                    node.direction = direction;\n                } else {\n                    node.direction = Direction.right;\n                }\n            } else {\n                node.direction = node.parent.direction;\n            }\n            this._move_node_internal(node, before_id);\n            this._flow_node_direction(node);\n        }\n        return node;\n    }\n    remove_node(node) {\n        if (!Node.is_node(node)) {\n            logger.error('the parameter node ' + node + ' is not a node.');\n            return false;\n        }\n        if (node.isroot) {\n            logger.error('fail, can not remove root node');\n            return false;\n        }\n        if (this.selected != null && this.selected.id == node.id) {\n            this.selected = null;\n        }\n        // clean all subordinate nodes\n        var children = node.children;\n        var ci = children.length;\n        while (ci--) {\n            this.remove_node(children[ci]);\n        }\n        // clean all children\n        children.length = 0;\n        var node_parent = node.parent;\n        // remove from parent's children\n        var sibling = node_parent.children;\n        var si = sibling.length;\n        while (si--) {\n            if (sibling[si].id == node.id) {\n                sibling.splice(si, 1);\n                break;\n            }\n        }\n        // remove from global nodes\n        delete this.nodes[node.id];\n        // clean all properties\n        for (var k in node) {\n            delete node[k];\n        }\n        // remove it's self\n        node = null;\n        this._update_index(node_parent);\n        return true;\n    }\n    _put_node(node) {\n        if (node.id in this.nodes) {\n            logger.warn(\"the node_id '\" + node.id + \"' has been already exist.\");\n            return false;\n        } else {\n            this.nodes[node.id] = node;\n            return true;\n        }\n    }\n    _update_index(node) {\n        if (node instanceof Node) {\n            node.children.sort(Node.compare);\n            for (var i = 0; i < node.children.length; i++) {\n                node.children[i].index = i + 1;\n            }\n        }\n    }\n}\n", "/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { __author__, __version__, logger, Direction } from './jsmind.common.js';\nimport { Mind } from './jsmind.mind.js';\nimport { Node } from './jsmind.node.js';\nimport { util } from './jsmind.util.js';\n\nconst DEFAULT_META = { name: 'jsMind', author: __author__, version: __version__ };\n\nexport const format = {\n    node_tree: {\n        example: {\n            meta: DEFAULT_META,\n            format: 'node_tree',\n            data: { id: 'root', topic: 'jsMind node_tree example' },\n        },\n        get_mind: function (source) {\n            var df = format.node_tree;\n            var mind = new Mind();\n            mind.name = source.meta.name;\n            mind.author = source.meta.author;\n            mind.version = source.meta.version;\n            df._parse(mind, source.data);\n            return mind;\n        },\n        get_data: function (mind) {\n            var df = format.node_tree;\n            var json = {};\n            json.meta = {\n                name: mind.name,\n                author: mind.author,\n                version: mind.version,\n            };\n            json.format = 'node_tree';\n            json.data = df._build_node(mind.root);\n            return json;\n        },\n\n        _parse: function (mind, node_root) {\n            var df = format.node_tree;\n            var data = df._extract_data(node_root);\n            mind.set_root(node_root.id, node_root.topic, data);\n            if ('children' in node_root) {\n                var children = node_root.children;\n                for (var i = 0; i < children.length; i++) {\n                    df._extract_subnode(mind, mind.root, children[i]);\n                }\n            }\n        },\n\n        _extract_data: function (node_json) {\n            var data = {};\n            for (var k in node_json) {\n                if (\n                    k == 'id' ||\n                    k == 'topic' ||\n                    k == 'children' ||\n                    k == 'direction' ||\n                    k == 'expanded'\n                ) {\n                    continue;\n                }\n                data[k] = node_json[k];\n            }\n            return data;\n        },\n\n        _extract_subnode: function (mind, node_parent, node_json) {\n            var df = format.node_tree;\n            var data = df._extract_data(node_json);\n            var d = null;\n            if (node_parent.isroot) {\n                d = node_json.direction == 'left' ? Direction.left : Direction.right;\n            }\n            var node = mind.add_node(\n                node_parent,\n                node_json.id,\n                node_json.topic,\n                data,\n                d,\n                node_json.expanded\n            );\n            if (!!node_json['children']) {\n                var children = node_json.children;\n                for (var i = 0; i < children.length; i++) {\n                    df._extract_subnode(mind, node, children[i]);\n                }\n            }\n        },\n\n        _build_node: function (node) {\n            var df = format.node_tree;\n            if (!(node instanceof Node)) {\n                return;\n            }\n            var o = {\n                id: node.id,\n                topic: node.topic,\n                expanded: node.expanded,\n            };\n            if (!!node.parent && node.parent.isroot) {\n                o.direction = node.direction == Direction.left ? 'left' : 'right';\n            }\n            if (node.data != null) {\n                var node_data = node.data;\n                for (var k in node_data) {\n                    o[k] = node_data[k];\n                }\n            }\n            var children = node.children;\n            if (children.length > 0) {\n                o.children = [];\n                for (var i = 0; i < children.length; i++) {\n                    o.children.push(df._build_node(children[i]));\n                }\n            }\n            return o;\n        },\n    },\n\n    node_array: {\n        example: {\n            meta: DEFAULT_META,\n            format: 'node_array',\n            data: [{ id: 'root', topic: 'jsMind node_array example', isroot: true }],\n        },\n\n        get_mind: function (source) {\n            var df = format.node_array;\n            var mind = new Mind();\n            mind.name = source.meta.name;\n            mind.author = source.meta.author;\n            mind.version = source.meta.version;\n            df._parse(mind, source.data);\n            return mind;\n        },\n\n        get_data: function (mind) {\n            var df = format.node_array;\n            var json = {};\n            json.meta = {\n                name: mind.name,\n                author: mind.author,\n                version: mind.version,\n            };\n            json.format = 'node_array';\n            json.data = [];\n            df._array(mind, json.data);\n            return json;\n        },\n\n        _parse: function (mind, node_array) {\n            var df = format.node_array;\n            var nodes = node_array.slice(0);\n            // reverse array for improving looping performance\n            nodes.reverse();\n            var root_node = df._extract_root(mind, nodes);\n            if (!!root_node) {\n                df._extract_subnode(mind, root_node, nodes);\n            } else {\n                logger.error('root node can not be found');\n            }\n        },\n\n        _extract_root: function (mind, node_array) {\n            var df = format.node_array;\n            var i = node_array.length;\n            while (i--) {\n                if ('isroot' in node_array[i] && node_array[i].isroot) {\n                    var root_json = node_array[i];\n                    var data = df._extract_data(root_json);\n                    var node = mind.set_root(root_json.id, root_json.topic, data);\n                    node_array.splice(i, 1);\n                    return node;\n                }\n            }\n            return null;\n        },\n\n        _extract_subnode: function (mind, parent_node, node_array) {\n            var df = format.node_array;\n            var i = node_array.length;\n            var node_json = null;\n            var data = null;\n            var extract_count = 0;\n            while (i--) {\n                node_json = node_array[i];\n                if (node_json.parentid == parent_node.id) {\n                    data = df._extract_data(node_json);\n                    var d = null;\n                    var node_direction = node_json.direction;\n                    if (!!node_direction) {\n                        d = node_direction == 'left' ? Direction.left : Direction.right;\n                    }\n                    var node = mind.add_node(\n                        parent_node,\n                        node_json.id,\n                        node_json.topic,\n                        data,\n                        d,\n                        node_json.expanded\n                    );\n                    node_array.splice(i, 1);\n                    extract_count++;\n                    var sub_extract_count = df._extract_subnode(mind, node, node_array);\n                    if (sub_extract_count > 0) {\n                        // reset loop index after extract subordinate node\n                        i = node_array.length;\n                        extract_count += sub_extract_count;\n                    }\n                }\n            }\n            return extract_count;\n        },\n\n        _extract_data: function (node_json) {\n            var data = {};\n            for (var k in node_json) {\n                if (\n                    k == 'id' ||\n                    k == 'topic' ||\n                    k == 'parentid' ||\n                    k == 'isroot' ||\n                    k == 'direction' ||\n                    k == 'expanded'\n                ) {\n                    continue;\n                }\n                data[k] = node_json[k];\n            }\n            return data;\n        },\n\n        _array: function (mind, node_array) {\n            var df = format.node_array;\n            df._array_node(mind.root, node_array);\n        },\n\n        _array_node: function (node, node_array) {\n            var df = format.node_array;\n            if (!(node instanceof Node)) {\n                return;\n            }\n            var o = {\n                id: node.id,\n                topic: node.topic,\n                expanded: node.expanded,\n            };\n            if (!!node.parent) {\n                o.parentid = node.parent.id;\n            }\n            if (node.isroot) {\n                o.isroot = true;\n            }\n            if (!!node.parent && node.parent.isroot) {\n                o.direction = node.direction == Direction.left ? 'left' : 'right';\n            }\n            if (node.data != null) {\n                var node_data = node.data;\n                for (var k in node_data) {\n                    o[k] = node_data[k];\n                }\n            }\n            node_array.push(o);\n            var ci = node.children.length;\n            for (var i = 0; i < ci; i++) {\n                df._array_node(node.children[i], node_array);\n            }\n        },\n    },\n\n    freemind: {\n        example: {\n            meta: DEFAULT_META,\n            format: 'freemind',\n            data: '<map version=\"1.0.1\"><node ID=\"root\" TEXT=\"jsMind freemind example\"/></map>',\n        },\n        get_mind: function (source) {\n            var df = format.freemind;\n            var mind = new Mind();\n            mind.name = source.meta.name;\n            mind.author = source.meta.author;\n            mind.version = source.meta.version;\n            var xml = source.data;\n            var xml_doc = df._parse_xml(xml);\n            var xml_root = df._find_root(xml_doc);\n            df._load_node(mind, null, xml_root);\n            return mind;\n        },\n\n        get_data: function (mind) {\n            var df = format.freemind;\n            var json = {};\n            json.meta = {\n                name: mind.name,\n                author: mind.author,\n                version: mind.version,\n            };\n            json.format = 'freemind';\n            var xml_lines = [];\n            xml_lines.push('<map version=\"1.0.1\">');\n            df._build_map(mind.root, xml_lines);\n            xml_lines.push('</map>');\n            json.data = xml_lines.join('');\n            return json;\n        },\n\n        _parse_xml: function (xml) {\n            var xml_doc = null;\n            if (window.DOMParser) {\n                var parser = new DOMParser();\n                xml_doc = parser.parseFromString(xml, 'text/xml');\n            } else {\n                // Internet Explorer\n                xml_doc = new ActiveXObject('Microsoft.XMLDOM');\n                xml_doc.async = false;\n                xml_doc.loadXML(xml);\n            }\n            return xml_doc;\n        },\n\n        _find_root: function (xml_doc) {\n            var nodes = xml_doc.childNodes;\n            var node = null;\n            var root = null;\n            var n = null;\n            for (var i = 0; i < nodes.length; i++) {\n                n = nodes[i];\n                if (n.nodeType == 1 && n.tagName == 'map') {\n                    node = n;\n                    break;\n                }\n            }\n            if (!!node) {\n                var ns = node.childNodes;\n                node = null;\n                for (var i = 0; i < ns.length; i++) {\n                    n = ns[i];\n                    if (n.nodeType == 1 && n.tagName == 'node') {\n                        node = n;\n                        break;\n                    }\n                }\n            }\n            return node;\n        },\n\n        _load_node: function (mind, parent_node, xml_node) {\n            var df = format.freemind;\n            var node_id = xml_node.getAttribute('ID');\n            var node_topic = xml_node.getAttribute('TEXT');\n            var node_folded = xml_node.getAttribute('FOLDED');\n            // look for richcontent\n            if (node_topic == null) {\n                var topic_children = xml_node.childNodes;\n                var topic_child = null;\n                for (var i = 0; i < topic_children.length; i++) {\n                    topic_child = topic_children[i];\n                    if (topic_child.nodeType == 1 && topic_child.tagName === 'richcontent') {\n                        node_topic = topic_child.textContent;\n                        break;\n                    }\n                }\n            }\n            var node_data = df._load_attributes(xml_node);\n            var node_expanded =\n                'expanded' in node_data ? node_data.expanded == 'true' : node_folded != 'true';\n            delete node_data.expanded;\n\n            var node_position = xml_node.getAttribute('POSITION');\n            var node_direction = null;\n            if (!!node_position) {\n                node_direction = node_position == 'left' ? Direction.left : Direction.right;\n            }\n            var node = null;\n            if (!!parent_node) {\n                node = mind.add_node(\n                    parent_node,\n                    node_id,\n                    node_topic,\n                    node_data,\n                    node_direction,\n                    node_expanded\n                );\n            } else {\n                node = mind.set_root(node_id, node_topic, node_data);\n            }\n            var children = xml_node.childNodes;\n            var child = null;\n            for (var i = 0; i < children.length; i++) {\n                child = children[i];\n                if (child.nodeType == 1 && child.tagName == 'node') {\n                    df._load_node(mind, node, child);\n                }\n            }\n        },\n\n        _load_attributes: function (xml_node) {\n            var children = xml_node.childNodes;\n            var attr = null;\n            var attr_data = {};\n            for (var i = 0; i < children.length; i++) {\n                attr = children[i];\n                if (attr.nodeType == 1 && attr.tagName === 'attribute') {\n                    attr_data[attr.getAttribute('NAME')] = attr.getAttribute('VALUE');\n                }\n            }\n            return attr_data;\n        },\n\n        _build_map: function (node, xml_lines) {\n            var df = format.freemind;\n            var pos = null;\n            if (!!node.parent && node.parent.isroot) {\n                pos = node.direction === Direction.left ? 'left' : 'right';\n            }\n            xml_lines.push('<node');\n            xml_lines.push(' ID=\"' + node.id + '\"');\n            if (!!pos) {\n                xml_lines.push(' POSITION=\"' + pos + '\"');\n            }\n            if (!node.expanded) {\n                xml_lines.push(' FOLDED=\"true\"');\n            }\n            xml_lines.push(' TEXT=\"' + df._escape(node.topic) + '\">');\n\n            // for attributes\n            var node_data = node.data;\n            if (node_data != null) {\n                for (var k in node_data) {\n                    xml_lines.push('<attribute NAME=\"' + k + '\" VALUE=\"' + node_data[k] + '\"/>');\n                }\n            }\n\n            // for children\n            var children = node.children;\n            for (var i = 0; i < children.length; i++) {\n                df._build_map(children[i], xml_lines);\n            }\n\n            xml_lines.push('</node>');\n        },\n\n        _escape: function (text) {\n            return text\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/'/g, '&apos;')\n                .replace(/\"/g, '&quot;');\n        },\n    },\n    text: {\n        example: {\n            meta: DEFAULT_META,\n            format: 'text',\n            data: 'jsMind text example\\n node1\\n  node1-sub\\n  node1-sub\\n node2',\n        },\n        _line_regex: /\\s*/,\n        get_mind: function (source) {\n            var df = format.text;\n            var mind = new Mind();\n            mind.name = source.meta.name;\n            mind.author = source.meta.author;\n            mind.version = source.meta.version;\n            var lines = source.data.split(/\\n|\\r/);\n            df._fill_nodes(mind, lines, 0, 0);\n            return mind;\n        },\n\n        _fill_nodes: function (mind, lines) {\n            let node_path = [];\n            let i = 0;\n            while (i < lines.length) {\n                let line = lines[i];\n                let level = line.match(/\\s*/)[0].length;\n                let topic = line.substr(level);\n\n                if (level == 0 && node_path.length > 0) {\n                    log.error('more than 1 root node was found: ' + topic);\n                    return;\n                }\n                if (level > node_path.length) {\n                    log.error('a suspended node was found: ' + topic);\n                    return;\n                }\n                let diff = node_path.length - level;\n                while (diff--) {\n                    node_path.pop();\n                }\n\n                if (level == 0 && node_path.length == 0) {\n                    let node = mind.set_root(util.uuid.newid(), topic);\n                    node_path.push(node);\n                } else {\n                    let node = mind.add_node(\n                        node_path[level - 1],\n                        util.uuid.newid(),\n                        topic,\n                        {},\n                        null\n                    );\n                    node_path.push(node);\n                }\n                i++;\n            }\n            node_path.length = 0;\n        },\n\n        get_data: function (mind) {\n            var df = format.text;\n            var json = {};\n            json.meta = {\n                name: mind.name,\n                author: mind.author,\n                version: mind.version,\n            };\n            json.format = 'text';\n            let lines = [];\n            df._build_lines(lines, [mind.root], 0);\n            json.data = lines.join('\\n');\n            return json;\n        },\n\n        _build_lines: function (lines, nodes, level) {\n            let prefix = new Array(level + 1).join(' ');\n            for (let node of nodes) {\n                lines.push(prefix + node.topic);\n                if (!!node.children) {\n                    format.text._build_lines(lines, node.children, level + 1);\n                }\n            }\n        },\n    },\n};\n", "/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { logger } from './jsmind.common.js';\nimport { format } from './jsmind.format.js';\n\nexport class DataProvider {\n    constructor(jm) {\n        this.jm = jm;\n    }\n\n    init() {\n        logger.debug('data.init');\n    }\n    reset() {\n        logger.debug('data.reset');\n    }\n    load(mind_data) {\n        var df = null;\n        var mind = null;\n        if (typeof mind_data === 'object') {\n            if (!!mind_data.format) {\n                df = mind_data.format;\n            } else {\n                df = 'node_tree';\n            }\n        } else {\n            df = 'freemind';\n        }\n\n        if (df == 'node_array') {\n            mind = format.node_array.get_mind(mind_data);\n        } else if (df == 'node_tree') {\n            mind = format.node_tree.get_mind(mind_data);\n        } else if (df == 'freemind') {\n            mind = format.freemind.get_mind(mind_data);\n        } else if (df == 'text') {\n            mind = format.text.get_mind(mind_data);\n        } else {\n            logger.warn('unsupported format');\n        }\n        return mind;\n    }\n    get_data(data_format) {\n        var data = null;\n        if (data_format == 'node_array') {\n            data = format.node_array.get_data(this.jm.mind);\n        } else if (data_format == 'node_tree') {\n            data = format.node_tree.get_data(this.jm.mind);\n        } else if (data_format == 'freemind') {\n            data = format.freemind.get_data(this.jm.mind);\n        } else if (data_format == 'text') {\n            data = format.text.get_data(this.jm.mind);\n        } else {\n            logger.error('unsupported ' + data_format + ' format');\n        }\n        return data;\n    }\n}\n", "/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\nimport { logger, Direction, EventType } from './jsmind.common.js';\n\nexport class LayoutProvider {\n    constructor(jm, options) {\n        this.opts = options;\n        this.jm = jm;\n        this.isside = this.opts.mode == 'side';\n        this.bounds = null;\n\n        this.cache_valid = false;\n    }\n    init() {\n        logger.debug('layout.init');\n    }\n    reset() {\n        logger.debug('layout.reset');\n        this.bounds = { n: 0, s: 0, w: 0, e: 0 };\n    }\n    calculate_next_child_direction(node) {\n        if (this.isside) {\n            return Direction.right;\n        }\n        var children = node.children || [];\n        var children_len = children.length;\n        var r = 0;\n        for (var i = 0; i < children_len; i++) {\n            if (children[i].direction === Direction.left) {\n                r--;\n            } else {\n                r++;\n            }\n        }\n        return children_len > 1 && r > 0 ? Direction.left : Direction.right;\n    }\n    layout() {\n        logger.debug('layout.layout');\n        this.layout_direction();\n        this.layout_offset();\n    }\n    layout_direction() {\n        this._layout_direction_root();\n    }\n    _layout_direction_root() {\n        var node = this.jm.mind.root;\n        var layout_data = null;\n        if ('layout' in node._data) {\n            layout_data = node._data.layout;\n        } else {\n            layout_data = {};\n            node._data.layout = layout_data;\n        }\n        var children = node.children;\n        var children_count = children.length;\n        layout_data.direction = Direction.center;\n        layout_data.side_index = 0;\n        if (this.isside) {\n            var i = children_count;\n            while (i--) {\n                this._layout_direction_side(children[i], Direction.right, i);\n            }\n        } else {\n            var i = children_count;\n            var subnode = null;\n            while (i--) {\n                subnode = children[i];\n                if (subnode.direction == Direction.left) {\n                    this._layout_direction_side(subnode, Direction.left, i);\n                } else {\n                    this._layout_direction_side(subnode, Direction.right, i);\n                }\n            }\n        }\n    }\n    _layout_direction_side(node, direction, side_index) {\n        var layout_data = null;\n        if ('layout' in node._data) {\n            layout_data = node._data.layout;\n        } else {\n            layout_data = {};\n            node._data.layout = layout_data;\n        }\n        var children = node.children;\n        var children_count = children.length;\n\n        layout_data.direction = direction;\n        layout_data.side_index = side_index;\n        var i = children_count;\n        while (i--) {\n            this._layout_direction_side(children[i], direction, i);\n        }\n    }\n    layout_offset() {\n        var node = this.jm.mind.root;\n        var layout_data = node._data.layout;\n        layout_data.offset_x = 0;\n        layout_data.offset_y = 0;\n        layout_data.outer_height = 0;\n        var children = node.children;\n        var i = children.length;\n        var left_nodes = [];\n        var right_nodes = [];\n        var subnode = null;\n        while (i--) {\n            subnode = children[i];\n            if (subnode._data.layout.direction == Direction.right) {\n                right_nodes.unshift(subnode);\n            } else {\n                left_nodes.unshift(subnode);\n            }\n        }\n        layout_data.left_nodes = left_nodes;\n        layout_data.right_nodes = right_nodes;\n        layout_data.outer_height_left = this._layout_offset_subnodes(left_nodes);\n        layout_data.outer_height_right = this._layout_offset_subnodes(right_nodes);\n        this.bounds.e = node._data.view.width / 2;\n        this.bounds.w = 0 - this.bounds.e;\n        this.bounds.n = 0;\n        this.bounds.s = Math.max(layout_data.outer_height_left, layout_data.outer_height_right);\n    }\n    // layout both the x and y axis\n    _layout_offset_subnodes(nodes) {\n        var total_height = 0;\n        var nodes_count = nodes.length;\n        var i = nodes_count;\n        var node = null;\n        var node_outer_height = 0;\n        var layout_data = null;\n        var base_y = 0;\n        var pd = null; // parent._data\n        while (i--) {\n            node = nodes[i];\n            layout_data = node._data.layout;\n            if (pd == null) {\n                pd = node.parent._data;\n            }\n\n            node_outer_height = this._layout_offset_subnodes(node.children);\n            if (!node.expanded) {\n                node_outer_height = 0;\n                this.set_visible(node.children, false);\n            }\n            node_outer_height = Math.max(node._data.view.height, node_outer_height);\n\n            if (this._should_reserve_cousin_space(node)) {\n                node_outer_height += this.opts.cousin_space;\n            }\n\n            layout_data.outer_height = node_outer_height;\n            layout_data.offset_y = base_y - node_outer_height / 2;\n            layout_data.offset_x =\n                this.opts.hspace * layout_data.direction +\n                (pd.view.width * (pd.layout.direction + layout_data.direction)) / 2;\n            if (!node.parent.isroot) {\n                layout_data.offset_x += this.opts.pspace * layout_data.direction;\n            }\n\n            base_y = base_y - node_outer_height - this.opts.vspace;\n            total_height += node_outer_height;\n        }\n        if (nodes_count > 1) {\n            total_height += this.opts.vspace * (nodes_count - 1);\n        }\n        i = nodes_count;\n        var middle_height = total_height / 2;\n        while (i--) {\n            node = nodes[i];\n            node._data.layout.offset_y += middle_height;\n        }\n        return total_height;\n    }\n    // layout the y axis only, for collapse/expand a node\n    _layout_offset_subnodes_height(nodes) {\n        var total_height = 0;\n        var nodes_count = nodes.length;\n        var i = nodes_count;\n        var node = null;\n        var node_outer_height = 0;\n        var layout_data = null;\n        var base_y = 0;\n        var pd = null; // parent._data\n        while (i--) {\n            node = nodes[i];\n            layout_data = node._data.layout;\n            if (pd == null) {\n                pd = node.parent._data;\n            }\n\n            node_outer_height = this._layout_offset_subnodes_height(node.children);\n            if (!node.expanded) {\n                node_outer_height = 0;\n            }\n            node_outer_height = Math.max(node._data.view.height, node_outer_height);\n            if (this._should_reserve_cousin_space(node)) {\n                node_outer_height += this.opts.cousin_space;\n            }\n\n            layout_data.outer_height = node_outer_height;\n            layout_data.offset_y = base_y - node_outer_height / 2;\n            base_y = base_y - node_outer_height - this.opts.vspace;\n            total_height += node_outer_height;\n        }\n        if (nodes_count > 1) {\n            total_height += this.opts.vspace * (nodes_count - 1);\n        }\n        i = nodes_count;\n        var middle_height = total_height / 2;\n        while (i--) {\n            node = nodes[i];\n            node._data.layout.offset_y += middle_height;\n        }\n        return total_height;\n    }\n    _should_reserve_cousin_space(node) {\n        return node.children.length > 0 && node.parent.children.length > 1;\n    }\n    get_node_offset(node) {\n        var layout_data = node._data.layout;\n        var offset_cache = null;\n        if ('_offset_' in layout_data && this.cache_valid) {\n            offset_cache = layout_data._offset_;\n        } else {\n            offset_cache = { x: -1, y: -1 };\n            layout_data._offset_ = offset_cache;\n        }\n        if (offset_cache.x == -1 || offset_cache.y == -1) {\n            var x = layout_data.offset_x;\n            var y = layout_data.offset_y;\n            if (!node.isroot) {\n                var offset_p = this.get_node_offset(node.parent);\n                x += offset_p.x;\n                y += offset_p.y;\n            }\n            offset_cache.x = x;\n            offset_cache.y = y;\n        }\n        return offset_cache;\n    }\n    get_node_point(node) {\n        var view_data = node._data.view;\n        var offset_p = this.get_node_offset(node);\n        var p = {};\n        p.x = offset_p.x + (view_data.width * (node._data.layout.direction - 1)) / 2;\n        p.y = offset_p.y - view_data.height / 2;\n        return p;\n    }\n    get_node_point_in(node) {\n        var p = this.get_node_offset(node);\n        return p;\n    }\n    get_node_point_out(node) {\n        var layout_data = node._data.layout;\n        var pout_cache = null;\n        if ('_pout_' in layout_data && this.cache_valid) {\n            pout_cache = layout_data._pout_;\n        } else {\n            pout_cache = { x: -1, y: -1 };\n            layout_data._pout_ = pout_cache;\n        }\n        if (pout_cache.x == -1 || pout_cache.y == -1) {\n            if (node.isroot) {\n                pout_cache.x = 0;\n                pout_cache.y = 0;\n            } else {\n                var view_data = node._data.view;\n                var offset_p = this.get_node_offset(node);\n                pout_cache.x =\n                    offset_p.x + (view_data.width + this.opts.pspace) * node._data.layout.direction;\n                pout_cache.y = offset_p.y;\n            }\n        }\n        return pout_cache;\n    }\n    get_expander_point(node) {\n        var p = this.get_node_point_out(node);\n        var ex_p = {};\n        if (node._data.layout.direction == Direction.right) {\n            ex_p.x = p.x - this.opts.pspace;\n        } else {\n            ex_p.x = p.x;\n        }\n        ex_p.y = p.y - Math.ceil(this.opts.pspace / 2);\n        return ex_p;\n    }\n    get_min_size() {\n        var nodes = this.jm.mind.nodes;\n        var node = null;\n        var pout = null;\n        for (var node_id in nodes) {\n            node = nodes[node_id];\n            pout = this.get_node_point_out(node);\n            if (pout.x > this.bounds.e) {\n                this.bounds.e = pout.x;\n            }\n            if (pout.x < this.bounds.w) {\n                this.bounds.w = pout.x;\n            }\n        }\n        return {\n            w: this.bounds.e - this.bounds.w,\n            h: this.bounds.s - this.bounds.n,\n        };\n    }\n    toggle_node(node) {\n        if (node.isroot) {\n            return;\n        }\n        if (node.expanded) {\n            this.collapse_node(node);\n        } else {\n            this.expand_node(node);\n        }\n    }\n    expand_node(node) {\n        node.expanded = true;\n        this.part_layout(node);\n        this.set_visible(node.children, true);\n        this.jm.invoke_event_handle(EventType.show, {\n            evt: 'expand_node',\n            data: [],\n            node: node.id,\n        });\n    }\n    collapse_node(node) {\n        node.expanded = false;\n        this.part_layout(node);\n        this.set_visible(node.children, false);\n        this.jm.invoke_event_handle(EventType.show, {\n            evt: 'collapse_node',\n            data: [],\n            node: node.id,\n        });\n    }\n    expand_all() {\n        var nodes = this.jm.mind.nodes;\n        var c = 0;\n        var node;\n        for (var node_id in nodes) {\n            node = nodes[node_id];\n            if (!node.expanded) {\n                node.expanded = true;\n                c++;\n            }\n        }\n        if (c > 0) {\n            var root = this.jm.mind.root;\n            this.part_layout(root);\n            this.set_visible(root.children, true);\n        }\n    }\n    collapse_all() {\n        var nodes = this.jm.mind.nodes;\n        var c = 0;\n        var node;\n        for (var node_id in nodes) {\n            node = nodes[node_id];\n            if (node.expanded && !node.isroot) {\n                node.expanded = false;\n                c++;\n            }\n        }\n        if (c > 0) {\n            var root = this.jm.mind.root;\n            this.part_layout(root);\n            this.set_visible(root.children, true);\n        }\n    }\n    expand_to_depth(target_depth, curr_nodes, curr_depth) {\n        if (target_depth < 1) {\n            return;\n        }\n        var nodes = curr_nodes || this.jm.mind.root.children;\n        var depth = curr_depth || 1;\n        var i = nodes.length;\n        var node = null;\n        while (i--) {\n            node = nodes[i];\n            if (depth < target_depth) {\n                if (!node.expanded) {\n                    this.expand_node(node);\n                }\n                this.expand_to_depth(target_depth, node.children, depth + 1);\n            }\n            if (depth == target_depth) {\n                if (node.expanded) {\n                    this.collapse_node(node);\n                }\n            }\n        }\n    }\n    part_layout(node) {\n        var root = this.jm.mind.root;\n        if (!!root) {\n            var root_layout_data = root._data.layout;\n            if (node.isroot) {\n                root_layout_data.outer_height_right = this._layout_offset_subnodes_height(\n                    root_layout_data.right_nodes\n                );\n                root_layout_data.outer_height_left = this._layout_offset_subnodes_height(\n                    root_layout_data.left_nodes\n                );\n            } else {\n                if (node._data.layout.direction == Direction.right) {\n                    root_layout_data.outer_height_right = this._layout_offset_subnodes_height(\n                        root_layout_data.right_nodes\n                    );\n                } else {\n                    root_layout_data.outer_height_left = this._layout_offset_subnodes_height(\n                        root_layout_data.left_nodes\n                    );\n                }\n            }\n            this.bounds.s = Math.max(\n                root_layout_data.outer_height_left,\n                root_layout_data.outer_height_right\n            );\n            this.cache_valid = false;\n        } else {\n            logger.warn('can not found root node');\n        }\n    }\n    set_visible(nodes, visible) {\n        var i = nodes.length;\n        var node = null;\n        var layout_data = null;\n        while (i--) {\n            node = nodes[i];\n            layout_data = node._data.layout;\n            if (node.expanded) {\n                this.set_visible(node.children, visible);\n            } else {\n                this.set_visible(node.children, false);\n            }\n            if (!node.isroot) {\n                node._data.layout.visible = visible;\n            }\n        }\n    }\n    is_expand(node) {\n        return node.expanded;\n    }\n    is_visible(node) {\n        var layout_data = node._data.layout;\n        if ('visible' in layout_data && !layout_data.visible) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n}\n", "/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { $ } from './jsmind.dom.js';\nimport { logger } from './jsmind.common.js';\n\nclass SvgGraph {\n    constructor(view) {\n        this.view = view;\n        this.opts = view.opts;\n        this.e_svg = SvgGraph.c('svg');\n        this.e_svg.setAttribute('class', 'jsmind');\n        this.size = { w: 0, h: 0 };\n        this.lines = [];\n        this.line_drawing = {\n            straight: this._line_to,\n            curved: this._bezier_to,\n        };\n        this.init_line_render();\n    }\n    static c(tag) {\n        return $.d.createElementNS('http://www.w3.org/2000/svg', tag);\n    }\n    init_line_render() {\n        if (typeof this.opts.custom_line_render === 'function') {\n            this.drawing = (path, x1, y1, x2, y2) => {\n                try {\n                    this.opts.custom_line_render.call(this, {\n                        ctx: path,\n                        start_point: { x: x1, y: y1 },\n                        end_point: { x: x2, y: y2 },\n                    });\n                } catch (e) {\n                    logger.error('custom line renderer error: ', e);\n                }\n            };\n        } else {\n            this.drawing = this.line_drawing[this.opts.line_style] || this.line_drawing.curved;\n        }\n    }\n    element() {\n        return this.e_svg;\n    }\n    set_size(w, h) {\n        this.size.w = w;\n        this.size.h = h;\n        this.e_svg.setAttribute('width', w);\n        this.e_svg.setAttribute('height', h);\n    }\n    clear() {\n        var len = this.lines.length;\n        while (len--) {\n            this.e_svg.removeChild(this.lines[len]);\n        }\n        this.lines.length = 0;\n    }\n    draw_line(pout, pin, offset, color) {\n        var line = SvgGraph.c('path');\n        line.setAttribute('stroke', color || this.opts.line_color);\n        line.setAttribute('stroke-width', this.opts.line_width);\n        line.setAttribute('fill', 'transparent');\n        this.lines.push(line);\n        this.e_svg.appendChild(line);\n        this.drawing(\n            line,\n            pin.x + offset.x,\n            pin.y + offset.y,\n            pout.x + offset.x,\n            pout.y + offset.y\n        );\n    }\n\n    copy_to(dest_canvas_ctx, callback) {\n        var img = new Image();\n        img.onload = function () {\n            dest_canvas_ctx.drawImage(img, 0, 0);\n            !!callback && callback();\n        };\n        img.src =\n            'data:image/svg+xml;base64,' + btoa(new XMLSerializer().serializeToString(this.e_svg));\n    }\n    _bezier_to(path, x1, y1, x2, y2) {\n        path.setAttribute(\n            'd',\n            'M ' +\n                x1 +\n                ' ' +\n                y1 +\n                ' C ' +\n                (x1 + ((x2 - x1) * 2) / 3) +\n                ' ' +\n                y1 +\n                ', ' +\n                x1 +\n                ' ' +\n                y2 +\n                ', ' +\n                x2 +\n                ' ' +\n                y2\n        );\n    }\n    _line_to(path, x1, y1, x2, y2) {\n        path.setAttribute('d', 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2);\n    }\n}\n\nclass CanvasGraph {\n    constructor(view) {\n        this.opts = view.opts;\n        this.e_canvas = $.c('canvas');\n        this.e_canvas.className = 'jsmind';\n        this.canvas_ctx = this.e_canvas.getContext('2d');\n        this.size = { w: 0, h: 0 };\n        this.line_drawing = {\n            straight: this._line_to,\n            curved: this._bezier_to,\n        };\n        this.dpr = view.device_pixel_ratio;\n        this.init_line_render();\n    }\n    init_line_render() {\n        if (typeof this.opts.custom_line_render === 'function') {\n            this.drawing = (ctx, x1, y1, x2, y2) => {\n                try {\n                    this.opts.custom_line_render.call(this, {\n                        ctx,\n                        start_point: { x: x1, y: y1 },\n                        end_point: { x: x2, y: y2 },\n                    });\n                } catch (e) {\n                    logger.error('custom line render error: ', e);\n                }\n            };\n        } else {\n            this.drawing = this.line_drawing[this.opts.line_style] || this.line_drawing.curved;\n        }\n    }\n    element() {\n        return this.e_canvas;\n    }\n    set_size(w, h) {\n        this.size.w = w;\n        this.size.h = h;\n        if (this.e_canvas.width && this.e_canvas.height && this.canvas_ctx.scale) {\n            this.e_canvas.width = w * this.dpr;\n            this.e_canvas.height = h * this.dpr;\n\n            this.e_canvas.style.width = w + 'px';\n            this.e_canvas.style.height = h + 'px';\n            this.canvas_ctx.scale(this.dpr, this.dpr);\n        } else {\n            this.e_canvas.width = w;\n            this.e_canvas.height = h;\n        }\n    }\n\n    clear() {\n        this.canvas_ctx.clearRect(0, 0, this.size.w, this.size.h);\n    }\n    draw_line(pout, pin, offset, color) {\n        var ctx = this.canvas_ctx;\n        ctx.strokeStyle = color || this.opts.line_color;\n        ctx.lineWidth = this.opts.line_width;\n        ctx.lineCap = 'round';\n        this.drawing(ctx, pin.x + offset.x, pin.y + offset.y, pout.x + offset.x, pout.y + offset.y);\n    }\n    copy_to(dest_canvas_ctx, callback) {\n        dest_canvas_ctx.drawImage(this.e_canvas, 0, 0, this.size.w, this.size.h);\n        !!callback && callback();\n    }\n    _bezier_to(ctx, x1, y1, x2, y2) {\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.bezierCurveTo(x1 + ((x2 - x1) * 2) / 3, y1, x1, y2, x2, y2);\n        ctx.stroke();\n    }\n    _line_to(ctx, x1, y1, x2, y2) {\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n    }\n}\n\nexport function init_graph(view, engine) {\n    return engine.toLowerCase() === 'svg' ? new SvgGraph(view) : new CanvasGraph(view);\n}\n", "/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\nimport { logger, EventType } from './jsmind.common.js';\nimport { $ } from './jsmind.dom.js';\nimport { init_graph } from './jsmind.graph.js';\nimport { util } from './jsmind.util.js';\n\nexport class ViewProvider {\n    constructor(jm, options) {\n        this.opts = options;\n        this.jm = jm;\n        this.layout = jm.layout;\n\n        this.container = null;\n        this.e_panel = null;\n        this.e_nodes = null;\n\n        this.size = { w: 0, h: 0 };\n\n        this.selected_node = null;\n        this.editing_node = null;\n\n        this.graph = null;\n        this.render_node = !!options.custom_node_render\n            ? this._custom_node_render\n            : this._default_node_render;\n        this.zoom_current = 1;\n        this.device_pixel_ratio = this.opts.enable_device_pixel_ratio\n            ? $.w.devicePixelRatio || 1\n            : 1;\n        this._initialized = false;\n    }\n    init() {\n        logger.debug(this.opts);\n        logger.debug('view.init');\n\n        this.container = $.i(this.opts.container) ? this.opts.container : $.g(this.opts.container);\n        if (!this.container) {\n            logger.error('the options.view.container was not be found in dom');\n            return;\n        }\n        this.graph = init_graph(this, this.opts.engine);\n\n        this.e_panel = $.c('div');\n        this.e_nodes = $.c('jmnodes');\n        this.e_editor = $.c('input');\n        this.e_panel.className = 'jsmind-inner jmnode-overflow-' + this.opts.node_overflow;\n        this.e_panel.tabIndex = 1;\n        this.e_panel.appendChild(this.graph.element());\n        this.e_panel.appendChild(this.e_nodes);\n\n        this.e_editor.className = 'jsmind-editor';\n        this.e_editor.type = 'text';\n\n        var v = this;\n        $.on(this.e_editor, 'keydown', function (e) {\n            var evt = e || event;\n            if (evt.keyCode == 13) {\n                v.edit_node_end();\n                evt.stopPropagation();\n            }\n        });\n        $.on(this.e_editor, 'blur', function (e) {\n            v.edit_node_end();\n        });\n\n        this.container.appendChild(this.e_panel);\n\n        if (!this.container.offsetParent) {\n            new IntersectionObserver((entities, observer) => {\n                if (entities[0].isIntersecting) {\n                    observer.unobserve(this.e_panel);\n                    this.resize();\n                }\n            }).observe(this.e_panel);\n        }\n    }\n\n    add_event(obj, event_name, event_handle, capture_by_panel) {\n        let target = !!capture_by_panel ? this.e_panel : this.e_nodes;\n        $.on(target, event_name, function (e) {\n            var evt = e || event;\n            event_handle.call(obj, evt);\n        });\n    }\n    get_binded_nodeid(element) {\n        if (element == null) {\n            return null;\n        }\n        var tagName = element.tagName.toLowerCase();\n        if (tagName == 'jmnode' || tagName == 'jmexpander') {\n            return element.getAttribute('nodeid');\n        } else if (tagName == 'jmnodes' || tagName == 'body' || tagName == 'html') {\n            return null;\n        } else {\n            return this.get_binded_nodeid(element.parentElement);\n        }\n    }\n    is_node(element) {\n        if (element == null) {\n            return false;\n        }\n        var tagName = element.tagName.toLowerCase();\n        if (tagName == 'jmnode') {\n            return true;\n        } else if (tagName == 'jmnodes' || tagName == 'body' || tagName == 'html') {\n            return false;\n        } else {\n            return this.is_node(element.parentElement);\n        }\n    }\n    is_expander(element) {\n        return element.tagName.toLowerCase() == 'jmexpander';\n    }\n    reset() {\n        logger.debug('view.reset');\n        this.selected_node = null;\n        this.clear_lines();\n        this.clear_nodes();\n        this.reset_theme();\n    }\n    reset_theme() {\n        var theme_name = this.jm.options.theme;\n        if (!!theme_name) {\n            this.e_nodes.className = 'theme-' + theme_name;\n        } else {\n            this.e_nodes.className = '';\n        }\n    }\n    reset_custom_style() {\n        var nodes = this.jm.mind.nodes;\n        for (var nodeid in nodes) {\n            this.reset_node_custom_style(nodes[nodeid]);\n        }\n    }\n    load() {\n        logger.debug('view.load');\n        this.setup_canvas_draggable(this.opts.draggable);\n        this.init_nodes();\n        this._initialized = true;\n    }\n    expand_size() {\n        var min_size = this.layout.get_min_size();\n        var min_width = min_size.w + this.opts.hmargin * 2;\n        var min_height = min_size.h + this.opts.vmargin * 2;\n        var client_w = this.e_panel.clientWidth;\n        var client_h = this.e_panel.clientHeight;\n        if (client_w < min_width) {\n            client_w = min_width;\n        }\n        if (client_h < min_height) {\n            client_h = min_height;\n        }\n        this.size.w = client_w;\n        this.size.h = client_h;\n    }\n    init_nodes_size(node) {\n        var view_data = node._data.view;\n        view_data.width = view_data.element.clientWidth;\n        view_data.height = view_data.element.clientHeight;\n    }\n    init_nodes() {\n        var nodes = this.jm.mind.nodes;\n        var doc_frag = $.d.createDocumentFragment();\n        for (var nodeid in nodes) {\n            this.create_node_element(nodes[nodeid], doc_frag);\n        }\n        this.e_nodes.appendChild(doc_frag);\n\n        this.run_in_c11y_mode_if_needed(() => {\n            for (var nodeid in nodes) {\n                this.init_nodes_size(nodes[nodeid]);\n            }\n        });\n    }\n    add_node(node) {\n        this.create_node_element(node, this.e_nodes);\n        this.run_in_c11y_mode_if_needed(() => {\n            this.init_nodes_size(node);\n        });\n    }\n    run_in_c11y_mode_if_needed(func) {\n        if (!!this.container.offsetParent) {\n            func();\n            return;\n        }\n        logger.warn(\n            'init nodes in compatibility mode. because the container or its parent has style {display:none}. '\n        );\n        this.e_panel.style.position = 'absolute';\n        this.e_panel.style.top = '-100000';\n        $.d.body.appendChild(this.e_panel);\n        func();\n        this.container.appendChild(this.e_panel);\n        this.e_panel.style.position = null;\n        this.e_panel.style.top = null;\n    }\n    create_node_element(node, parent_node) {\n        var view_data = null;\n        if ('view' in node._data) {\n            view_data = node._data.view;\n        } else {\n            view_data = {};\n            node._data.view = view_data;\n        }\n\n        var d = $.c('jmnode');\n        if (node.isroot) {\n            d.className = 'root';\n        } else {\n            var d_e = $.c('jmexpander');\n            $.t(d_e, '-');\n            d_e.setAttribute('nodeid', node.id);\n            d_e.style.visibility = 'hidden';\n            parent_node.appendChild(d_e);\n            view_data.expander = d_e;\n        }\n        if (!!node.topic) {\n            this.render_node(d, node);\n        }\n        d.setAttribute('nodeid', node.id);\n        d.style.visibility = 'hidden';\n        this._reset_node_custom_style(d, node.data);\n\n        parent_node.appendChild(d);\n        view_data.element = d;\n    }\n    remove_node(node) {\n        if (this.selected_node != null && this.selected_node.id == node.id) {\n            this.selected_node = null;\n        }\n        if (this.editing_node != null && this.editing_node.id == node.id) {\n            node._data.view.element.removeChild(this.e_editor);\n            this.editing_node = null;\n        }\n        var children = node.children;\n        var i = children.length;\n        while (i--) {\n            this.remove_node(children[i]);\n        }\n        if (node._data.view) {\n            var element = node._data.view.element;\n            var expander = node._data.view.expander;\n            this.e_nodes.removeChild(element);\n            this.e_nodes.removeChild(expander);\n            node._data.view.element = null;\n            node._data.view.expander = null;\n        }\n    }\n    update_node(node) {\n        var view_data = node._data.view;\n        var element = view_data.element;\n        if (!!node.topic) {\n            this.render_node(element, node);\n        }\n        if (this.layout.is_visible(node)) {\n            view_data.width = element.clientWidth;\n            view_data.height = element.clientHeight;\n        } else {\n            let origin_style = element.getAttribute('style');\n            element.style = 'visibility: visible; left:0; top:0;';\n            view_data.width = element.clientWidth;\n            view_data.height = element.clientHeight;\n            element.style = origin_style;\n        }\n    }\n    select_node(node) {\n        if (!!this.selected_node) {\n            var element = this.selected_node._data.view.element;\n            element.className = element.className.replace(/\\s*selected\\b/i, '');\n            this.restore_selected_node_custom_style(this.selected_node);\n        }\n        if (!!node) {\n            this.selected_node = node;\n            node._data.view.element.className += ' selected';\n            this.clear_selected_node_custom_style(node);\n        }\n    }\n    select_clear() {\n        this.select_node(null);\n    }\n    get_editing_node() {\n        return this.editing_node;\n    }\n    is_editing() {\n        return !!this.editing_node;\n    }\n    edit_node_begin(node) {\n        if (!node.topic) {\n            logger.warn(\"don't edit image nodes\");\n            return;\n        }\n        if (this.editing_node != null) {\n            this.edit_node_end();\n        }\n        this.editing_node = node;\n        var view_data = node._data.view;\n        var element = view_data.element;\n        var topic = node.topic;\n        var ncs = getComputedStyle(element);\n        this.e_editor.value = topic;\n        this.e_editor.style.width =\n            element.clientWidth -\n            parseInt(ncs.getPropertyValue('padding-left')) -\n            parseInt(ncs.getPropertyValue('padding-right')) +\n            'px';\n        element.innerHTML = '';\n        element.appendChild(this.e_editor);\n        element.style.zIndex = 5;\n        this.e_editor.focus();\n        this.e_editor.select();\n    }\n    edit_node_end() {\n        if (this.editing_node != null) {\n            var node = this.editing_node;\n            this.editing_node = null;\n            var view_data = node._data.view;\n            var element = view_data.element;\n            var topic = this.e_editor.value;\n            element.style.zIndex = 'auto';\n            element.removeChild(this.e_editor);\n            if (util.text.is_empty(topic) || node.topic === topic) {\n                this.render_node(element, node);\n            } else {\n                this.jm.update_node(node.id, topic);\n            }\n        }\n        this.e_panel.focus();\n    }\n    get_view_offset() {\n        var bounds = this.layout.bounds;\n        var _x = (this.size.w - bounds.e - bounds.w) / 2;\n        var _y = this.size.h / 2;\n        return { x: _x, y: _y };\n    }\n    resize() {\n        this.graph.set_size(1, 1);\n        this.e_nodes.style.width = '1px';\n        this.e_nodes.style.height = '1px';\n\n        this.expand_size();\n        this._show();\n    }\n    _show() {\n        this.graph.set_size(this.size.w, this.size.h);\n        this.e_nodes.style.width = this.size.w + 'px';\n        this.e_nodes.style.height = this.size.h + 'px';\n        this.show_nodes();\n        this.show_lines();\n        //this.layout.cache_valid = true;\n        this.jm.invoke_event_handle(EventType.resize, { data: [] });\n    }\n    zoom_in(e) {\n        return this.set_zoom(this.zoom_current + this.opts.zoom.step, e);\n    }\n    zoom_out(e) {\n        return this.set_zoom(this.zoom_current - this.opts.zoom.step, e);\n    }\n    set_zoom(zoom, e) {\n        if (zoom < this.opts.zoom.min || zoom > this.opts.zoom.max) {\n            return false;\n        }\n        let e_panel_rect = this.e_panel.getBoundingClientRect();\n        if (\n            zoom < 1 &&\n            zoom < this.zoom_current &&\n            this.size.w * zoom < e_panel_rect.width &&\n            this.size.h * zoom < e_panel_rect.height\n        ) {\n            return false;\n        }\n        let zoom_center = !!e\n            ? { x: e.x - e_panel_rect.x, y: e.y - e_panel_rect.y }\n            : { x: e_panel_rect.width / 2, y: e_panel_rect.height / 2 };\n        let panel_scroll_x =\n            ((this.e_panel.scrollLeft + zoom_center.x) * zoom) / this.zoom_current - zoom_center.x;\n        let panel_scroll_y =\n            ((this.e_panel.scrollTop + zoom_center.y) * zoom) / this.zoom_current - zoom_center.y;\n\n        this.zoom_current = zoom;\n        for (var i = 0; i < this.e_panel.children.length; i++) {\n            this.e_panel.children[i].style.zoom = zoom;\n        }\n        this._show();\n        this.e_panel.scrollLeft = panel_scroll_x;\n        this.e_panel.scrollTop = panel_scroll_y;\n        return true;\n    }\n    show(keep_center) {\n        logger.debug(`view.show: {keep_center: ${keep_center}}`);\n        this.expand_size();\n        this._show();\n        if (!!keep_center) {\n            this.center_node(this.jm.mind.root);\n        }\n    }\n    relayout() {\n        this.expand_size();\n        this._show();\n    }\n    save_location(node) {\n        var vd = node._data.view;\n        vd._saved_location = {\n            x: parseInt(vd.element.style.left) - this.e_panel.scrollLeft,\n            y: parseInt(vd.element.style.top) - this.e_panel.scrollTop,\n        };\n    }\n    restore_location(node) {\n        var vd = node._data.view;\n        this.e_panel.scrollLeft = parseInt(vd.element.style.left) - vd._saved_location.x;\n        this.e_panel.scrollTop = parseInt(vd.element.style.top) - vd._saved_location.y;\n    }\n    clear_nodes() {\n        var mind = this.jm.mind;\n        if (mind == null) {\n            return;\n        }\n        var nodes = mind.nodes;\n        var node = null;\n        for (var nodeid in nodes) {\n            node = nodes[nodeid];\n            node._data.view.element = null;\n            node._data.view.expander = null;\n        }\n        this.e_nodes.innerHTML = '';\n    }\n    show_nodes() {\n        var nodes = this.jm.mind.nodes;\n        var node = null;\n        var node_element = null;\n        var p = null;\n        var view_data = null;\n        var view_offset = this.get_view_offset();\n        for (var nodeid in nodes) {\n            node = nodes[nodeid];\n            view_data = node._data.view;\n            node_element = view_data.element;\n            if (!this.layout.is_visible(node)) {\n                node_element.style.display = 'none';\n                view_data.expander.style.display = 'none';\n                continue;\n            }\n            this.reset_node_custom_style(node);\n            p = this.layout.get_node_point(node);\n            view_data.abs_x = view_offset.x + p.x;\n            view_data.abs_y = view_offset.y + p.y;\n            node_element.style.left = view_offset.x + p.x + 'px';\n            node_element.style.top = view_offset.y + p.y + 'px';\n            node_element.style.display = '';\n            node_element.style.visibility = 'visible';\n            this._show_expander(node, view_offset);\n        }\n    }\n    _show_expander(node, view_offset) {\n        if (node.isroot) {\n            return;\n        }\n\n        var expander = node._data.view.expander;\n        if (node.children.length == 0) {\n            expander.style.display = 'none';\n            expander.style.visibility = 'hidden';\n            return;\n        }\n\n        let expander_text = this._get_expander_text(node);\n        $.t(expander, expander_text);\n\n        let p_expander = this.layout.get_expander_point(node);\n        expander.style.left = view_offset.x + p_expander.x + 'px';\n        expander.style.top = view_offset.y + p_expander.y + 'px';\n        expander.style.display = '';\n        expander.style.visibility = 'visible';\n    }\n\n    _get_expander_text(node) {\n        let style = !!this.opts.expander_style ? this.opts.expander_style.toLowerCase() : 'char';\n        if (style === 'number') {\n            return node.children.length > 99 ? '...' : node.children.length;\n        }\n        if (style === 'char') {\n            return node.expanded ? '-' : '+';\n        }\n    }\n\n    _default_node_render(ele, node) {\n        if (this.opts.support_html) {\n            $.h(ele, node.topic);\n        } else {\n            $.t(ele, node.topic);\n        }\n    }\n    _custom_node_render(ele, node) {\n        let rendered = this.opts.custom_node_render(this.jm, ele, node);\n        if (!rendered) {\n            this._default_node_render(ele, node);\n        }\n    }\n    reset_node_custom_style(node) {\n        this._reset_node_custom_style(node._data.view.element, node.data);\n    }\n    _reset_node_custom_style(node_element, node_data) {\n        if ('background-color' in node_data) {\n            node_element.style.backgroundColor = node_data['background-color'];\n        }\n        if ('foreground-color' in node_data) {\n            node_element.style.color = node_data['foreground-color'];\n        }\n        if ('width' in node_data) {\n            node_element.style.width = node_data['width'] + 'px';\n        }\n        if ('height' in node_data) {\n            node_element.style.height = node_data['height'] + 'px';\n        }\n        if ('font-size' in node_data) {\n            node_element.style.fontSize = node_data['font-size'] + 'px';\n        }\n        if ('font-weight' in node_data) {\n            node_element.style.fontWeight = node_data['font-weight'];\n        }\n        if ('font-style' in node_data) {\n            node_element.style.fontStyle = node_data['font-style'];\n        }\n        if ('background-image' in node_data) {\n            var backgroundImage = node_data['background-image'];\n            if (backgroundImage.startsWith('data') && node_data['width'] && node_data['height']) {\n                var img = new Image();\n\n                img.onload = function () {\n                    var c = $.c('canvas');\n                    c.width = node_element.clientWidth;\n                    c.height = node_element.clientHeight;\n                    var img = this;\n                    if (c.getContext) {\n                        var ctx = c.getContext('2d');\n                        ctx.drawImage(\n                            img,\n                            2,\n                            2,\n                            node_element.clientWidth,\n                            node_element.clientHeight\n                        );\n                        var scaledImageData = c.toDataURL();\n                        node_element.style.backgroundImage = 'url(' + scaledImageData + ')';\n                    }\n                };\n                img.src = backgroundImage;\n            } else {\n                node_element.style.backgroundImage = 'url(' + backgroundImage + ')';\n            }\n            node_element.style.backgroundSize = '99%';\n\n            if ('background-rotation' in node_data) {\n                node_element.style.transform =\n                    'rotate(' + node_data['background-rotation'] + 'deg)';\n            }\n        }\n    }\n    restore_selected_node_custom_style(node) {\n        var node_element = node._data.view.element;\n        var node_data = node.data;\n        if ('background-color' in node_data) {\n            node_element.style.backgroundColor = node_data['background-color'];\n        }\n        if ('foreground-color' in node_data) {\n            node_element.style.color = node_data['foreground-color'];\n        }\n    }\n    clear_selected_node_custom_style(node) {\n        var node_element = node._data.view.element;\n        node_element.style.backgroundColor = '';\n        node_element.style.color = '';\n    }\n    clear_lines() {\n        this.graph.clear();\n    }\n    show_lines() {\n        this.clear_lines();\n        var nodes = this.jm.mind.nodes;\n        var node = null;\n        var pin = null;\n        var pout = null;\n        var color = null;\n        var _offset = this.get_view_offset();\n        for (var nodeid in nodes) {\n            node = nodes[nodeid];\n            if (!!node.isroot) {\n                continue;\n            }\n            if (!this.layout.is_visible(node)) {\n                continue;\n            }\n            pin = this.layout.get_node_point_in(node);\n            pout = this.layout.get_node_point_out(node.parent);\n            color = node.data['leading-line-color'];\n            this.graph.draw_line(pout, pin, _offset, color);\n        }\n    }\n    // Drag the whole mind map with your mouse, when it's larger that the container\n    setup_canvas_draggable(enabled) {\n        this.opts.draggable = enabled;\n        if (!this._initialized) {\n            let dragging = false;\n            let x, y;\n            if (this.opts.hide_scrollbars_when_draggable) {\n                // Avoid scrollbars when mind map is larger than the container (e_panel = id jsmind-inner)\n                this.e_panel.style = 'overflow: hidden';\n            }\n            // Move the whole mind map with mouse moves, while button is down.\n            $.on(this.container, 'mousedown', eventDown => {\n                if (this.opts.draggable) {\n                    dragging = true;\n                    // Record current mouse position.\n                    x = eventDown.clientX;\n                    y = eventDown.clientY;\n                }\n            });\n            // Stop moving mind map once mouse button is released.\n            $.on(this.container, 'mouseup', () => {\n                dragging = false;\n            });\n            // Follow current mouse position and move mind map accordingly.\n            $.on(this.container, 'mousemove', eventMove => {\n                if (this.opts.draggable) {\n                    if (dragging) {\n                        this.e_panel.scrollBy(x - eventMove.clientX, y - eventMove.clientY);\n                        // Record new current position.\n                        x = eventMove.clientX;\n                        y = eventMove.clientY;\n                    }\n                }\n            });\n        }\n    }\n    center_node(node) {\n        if (!this.layout.is_visible(node)) {\n            logger.warn('can not scroll to the node, because it is invisible');\n            return false;\n        }\n        let view_data = node._data.view;\n        let e_panel_rect = this.e_panel.getBoundingClientRect();\n        let node_center_point = {\n            x: view_data.abs_x + view_data.width / 2,\n            y: view_data.abs_y + view_data.height / 2,\n        };\n        this.e_panel.scrollTo(\n            node_center_point.x * this.zoom_current - e_panel_rect.width / 2,\n            node_center_point.y * this.zoom_current - e_panel_rect.height / 2\n        );\n        return true;\n    }\n\n    zoomIn(e) {\n        logger.warn('please use zoom_in instead');\n        return this.zoom_in(e);\n    }\n    zoomOut(e) {\n        logger.warn('please use zoom_out instead');\n        return this.zoom_out(e);\n    }\n    setZoom(zoom, e) {\n        logger.warn('please use set_zoom instead');\n        return this.set_zoom(zoom, e);\n    }\n}\n", "/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { $ } from './jsmind.dom.js';\nimport { util } from './jsmind.util.js';\nimport { Direction } from './jsmind.common.js';\n\nexport class ShortcutProvider {\n    constructor(jm, options) {\n        this.jm = jm;\n        this.opts = options;\n        this.mapping = options.mapping;\n        this.handles = options.handles;\n        this._newid = null;\n        this._mapping = {};\n    }\n    init() {\n        $.on(this.jm.view.e_panel, 'keydown', this.handler.bind(this));\n\n        this.handles['addchild'] = this.handle_addchild;\n        this.handles['addbrother'] = this.handle_addbrother;\n        this.handles['editnode'] = this.handle_editnode;\n        this.handles['delnode'] = this.handle_delnode;\n        this.handles['toggle'] = this.handle_toggle;\n        this.handles['up'] = this.handle_up;\n        this.handles['down'] = this.handle_down;\n        this.handles['left'] = this.handle_left;\n        this.handles['right'] = this.handle_right;\n\n        for (var handle in this.mapping) {\n            if (!!this.mapping[handle] && handle in this.handles) {\n                let keys = this.mapping[handle];\n                if (!Array.isArray(keys)) {\n                    keys = [keys];\n                }\n                for (let key of keys) {\n                    this._mapping[key] = this.handles[handle];\n                }\n            }\n        }\n\n        if (typeof this.opts.id_generator === 'function') {\n            this._newid = this.opts.id_generator;\n        } else {\n            this._newid = util.uuid.newid;\n        }\n    }\n    enable_shortcut() {\n        this.opts.enable = true;\n    }\n    disable_shortcut() {\n        this.opts.enable = false;\n    }\n    handler(e) {\n        if (e.which == 9) {\n            e.preventDefault();\n        } //prevent tab to change focus in browser\n        if (this.jm.view.is_editing()) {\n            return;\n        }\n        var evt = e || event;\n        if (!this.opts.enable) {\n            return true;\n        }\n        var kc =\n            evt.keyCode +\n            (evt.metaKey << 13) +\n            (evt.ctrlKey << 12) +\n            (evt.altKey << 11) +\n            (evt.shiftKey << 10);\n        if (kc in this._mapping) {\n            this._mapping[kc].call(this, this.jm, e);\n        }\n    }\n    handle_addchild(_jm, e) {\n        var selected_node = _jm.get_selected_node();\n        if (!!selected_node) {\n            var node_id = this._newid();\n            var node = _jm.add_node(selected_node, node_id, 'New Node');\n            if (!!node) {\n                _jm.select_node(node_id);\n                _jm.begin_edit(node_id);\n            }\n        }\n    }\n    handle_addbrother(_jm, e) {\n        var selected_node = _jm.get_selected_node();\n        if (!!selected_node && !selected_node.isroot) {\n            var node_id = this._newid();\n            var node = _jm.insert_node_after(selected_node, node_id, 'New Node');\n            if (!!node) {\n                _jm.select_node(node_id);\n                _jm.begin_edit(node_id);\n            }\n        }\n    }\n    handle_editnode(_jm, e) {\n        var selected_node = _jm.get_selected_node();\n        if (!!selected_node) {\n            _jm.begin_edit(selected_node);\n        }\n    }\n    handle_delnode(_jm, e) {\n        var selected_node = _jm.get_selected_node();\n        if (!!selected_node && !selected_node.isroot) {\n            _jm.select_node(selected_node.parent);\n            _jm.remove_node(selected_node);\n        }\n    }\n    handle_toggle(_jm, e) {\n        var evt = e || event;\n        var selected_node = _jm.get_selected_node();\n        if (!!selected_node) {\n            _jm.toggle_node(selected_node.id);\n            evt.stopPropagation();\n            evt.preventDefault();\n        }\n    }\n    handle_up(_jm, e) {\n        var evt = e || event;\n        var selected_node = _jm.get_selected_node();\n        if (!!selected_node) {\n            var up_node = _jm.find_node_before(selected_node);\n            if (!up_node) {\n                var np = _jm.find_node_before(selected_node.parent);\n                if (!!np && np.children.length > 0) {\n                    up_node = np.children[np.children.length - 1];\n                }\n            }\n            if (!!up_node) {\n                _jm.select_node(up_node);\n            }\n            evt.stopPropagation();\n            evt.preventDefault();\n        }\n    }\n    handle_down(_jm, e) {\n        var evt = e || event;\n        var selected_node = _jm.get_selected_node();\n        if (!!selected_node) {\n            var down_node = _jm.find_node_after(selected_node);\n            if (!down_node) {\n                var np = _jm.find_node_after(selected_node.parent);\n                if (!!np && np.children.length > 0) {\n                    down_node = np.children[0];\n                }\n            }\n            if (!!down_node) {\n                _jm.select_node(down_node);\n            }\n            evt.stopPropagation();\n            evt.preventDefault();\n        }\n    }\n    handle_left(_jm, e) {\n        this._handle_direction(_jm, e, Direction.left);\n    }\n    handle_right(_jm, e) {\n        this._handle_direction(_jm, e, Direction.right);\n    }\n    _handle_direction(_jm, e, d) {\n        var evt = e || event;\n        var selected_node = _jm.get_selected_node();\n        var node = null;\n        if (!!selected_node) {\n            if (selected_node.isroot) {\n                var c = selected_node.children;\n                var children = [];\n                for (var i = 0; i < c.length; i++) {\n                    if (c[i].direction === d) {\n                        children.push(i);\n                    }\n                }\n                node = c[children[Math.floor((children.length - 1) / 2)]];\n            } else if (selected_node.direction === d) {\n                var children = selected_node.children;\n                var children_count = children.length;\n                if (children_count > 0) {\n                    node = children[Math.floor((children_count - 1) / 2)];\n                }\n            } else {\n                node = selected_node.parent;\n            }\n            if (!!node) {\n                _jm.select_node(node);\n            }\n            evt.stopPropagation();\n            evt.preventDefault();\n        }\n    }\n}\n", "/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { $ } from './jsmind.dom.js';\n\nconst plugin_data = {\n    plugins: [],\n};\n\nexport function register(plugin) {\n    if (!(plugin instanceof Plugin)) {\n        throw new Error('can not register plugin, it is not an instance of Plugin');\n    }\n    if (plugin_data.plugins.map(p => p.name).includes(plugin.name)) {\n        throw new Error('can not register plugin ' + plugin.name + ': plugin name already exist');\n    }\n    plugin_data.plugins.push(plugin);\n}\n\nexport function apply(jm, options) {\n    $.w.setTimeout(function () {\n        _apply(jm, options);\n    }, 0);\n}\n\nfunction _apply(jm, options) {\n    plugin_data.plugins.forEach(p => p.fn_init(jm, options[p.name]));\n}\n\nexport class Plugin {\n    // function fn_init(jm, options){ }\n    constructor(name, fn_init) {\n        if (!name) {\n            throw new Error('plugin must has a name');\n        }\n        if (!fn_init || typeof fn_init !== 'function') {\n            throw new Error('plugin must has an init function');\n        }\n        this.name = name;\n        this.fn_init = fn_init;\n    }\n}\n", "/**\n * @license BSD\n * @copyright 2014-2023 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport { __version__, logger, EventType, Direction, LogLevel } from './jsmind.common.js';\nimport { merge_option } from './jsmind.option.js';\nimport { Mind } from './jsmind.mind.js';\nimport { Node } from './jsmind.node.js';\nimport { DataProvider } from './jsmind.data_provider.js';\nimport { LayoutProvider } from './jsmind.layout_provider.js';\nimport { ViewProvider } from './jsmind.view_provider.js';\nimport { ShortcutProvider } from './jsmind.shortcut_provider.js';\nimport { Plugin, register as _register_plugin, apply as apply_plugins } from './jsmind.plugin.js';\nimport { format } from './jsmind.format.js';\nimport { $ } from './jsmind.dom.js';\nimport { util as _util } from './jsmind.util.js';\n\nexport default class jsMind {\n    static mind = Mind;\n    static node = Node;\n    static direction = Direction;\n    static event_type = EventType;\n    static $ = $;\n    static plugin = Plugin;\n    static register_plugin = _register_plugin;\n    static util = _util;\n\n    constructor(options) {\n        jsMind.current = this;\n        this.options = merge_option(options);\n        logger.level(LogLevel[this.options.log_level]);\n        this.version = __version__;\n        this.initialized = false;\n        this.mind = null;\n        this.event_handles = [];\n        this.init();\n    }\n\n    init() {\n        if (!!this.initialized) {\n            return;\n        }\n        this.initialized = true;\n        var opts_layout = {\n            mode: this.options.mode,\n            hspace: this.options.layout.hspace,\n            vspace: this.options.layout.vspace,\n            pspace: this.options.layout.pspace,\n            cousin_space: this.options.layout.cousin_space,\n        };\n        var opts_view = {\n            container: this.options.container,\n            support_html: this.options.support_html,\n            engine: this.options.view.engine,\n            enable_device_pixel_ratio: this.options.view.enable_device_pixel_ratio,\n            hmargin: this.options.view.hmargin,\n            vmargin: this.options.view.vmargin,\n            line_width: this.options.view.line_width,\n            line_color: this.options.view.line_color,\n            line_style: this.options.view.line_style,\n            custom_line_render: this.options.view.custom_line_render,\n            draggable: this.options.view.draggable,\n            hide_scrollbars_when_draggable: this.options.view.hide_scrollbars_when_draggable,\n            node_overflow: this.options.view.node_overflow,\n            zoom: this.options.view.zoom,\n            custom_node_render: this.options.view.custom_node_render,\n            expander_style: this.options.view.expander_style,\n        };\n        // create instance of function provider\n        this.data = new DataProvider(this);\n        this.layout = new LayoutProvider(this, opts_layout);\n        this.view = new ViewProvider(this, opts_view);\n        this.shortcut = new ShortcutProvider(this, this.options.shortcut);\n\n        this.data.init();\n        this.layout.init();\n        this.view.init();\n        this.shortcut.init();\n\n        this._event_bind();\n\n        apply_plugins(this, this.options.plugin);\n    }\n    get_editable() {\n        return this.options.editable;\n    }\n    enable_edit() {\n        this.options.editable = true;\n    }\n    disable_edit() {\n        this.options.editable = false;\n    }\n    get_view_draggable() {\n        return this.options.view.draggable;\n    }\n    enable_view_draggable() {\n        this.options.view.draggable = true;\n        this.view.setup_canvas_draggable(true);\n    }\n    disable_view_draggable() {\n        this.options.view.draggable = false;\n        this.view.setup_canvas_draggable(false);\n    }\n    // options are 'mousedown', 'click', 'dblclick', 'mousewheel'\n    enable_event_handle(event_handle) {\n        this.options.default_event_handle['enable_' + event_handle + '_handle'] = true;\n    }\n    // options are 'mousedown', 'click', 'dblclick', 'mousewheel'\n    disable_event_handle(event_handle) {\n        this.options.default_event_handle['enable_' + event_handle + '_handle'] = false;\n    }\n    set_theme(theme) {\n        var theme_old = this.options.theme;\n        this.options.theme = !!theme ? theme : null;\n        if (theme_old != this.options.theme) {\n            this.view.reset_theme();\n            this.view.reset_custom_style();\n        }\n    }\n    _event_bind() {\n        this.view.add_event(this, 'mousedown', this.mousedown_handle);\n        this.view.add_event(this, 'click', this.click_handle);\n        this.view.add_event(this, 'dblclick', this.dblclick_handle);\n        this.view.add_event(this, 'mousewheel', this.mousewheel_handle, true);\n    }\n    mousedown_handle(e) {\n        if (!this.options.default_event_handle['enable_mousedown_handle']) {\n            return;\n        }\n        var element = e.target || event.srcElement;\n        var node_id = this.view.get_binded_nodeid(element);\n        if (!!node_id) {\n            if (this.view.is_node(element)) {\n                this.select_node(node_id);\n            }\n        } else {\n            this.select_clear();\n        }\n    }\n    click_handle(e) {\n        if (!this.options.default_event_handle['enable_click_handle']) {\n            return;\n        }\n        var element = e.target || event.srcElement;\n        var is_expander = this.view.is_expander(element);\n        if (is_expander) {\n            var node_id = this.view.get_binded_nodeid(element);\n            if (!!node_id) {\n                this.toggle_node(node_id);\n            }\n        }\n    }\n    dblclick_handle(e) {\n        if (!this.options.default_event_handle['enable_dblclick_handle']) {\n            return;\n        }\n        if (this.get_editable()) {\n            var element = e.target || event.srcElement;\n            var is_node = this.view.is_node(element);\n            if (is_node) {\n                var node_id = this.view.get_binded_nodeid(element);\n                if (!!node_id) {\n                    this.begin_edit(node_id);\n                }\n            }\n        }\n    }\n    // Use [Ctrl] + Mousewheel, to zoom in/out.\n    mousewheel_handle(e) {\n        // Test if mousewheel option is enabled and Ctrl key is pressed.\n        if (!this.options.default_event_handle['enable_mousewheel_handle'] || !e.ctrlKey) {\n            return;\n        }\n        var evt = e || event;\n        // Avoid default page scrolling behavior.\n        evt.preventDefault();\n\n        if (evt.deltaY < 0) {\n            this.view.zoom_in(evt); // wheel down\n        } else {\n            this.view.zoom_out(evt);\n        }\n    }\n    begin_edit(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return false;\n            } else {\n                return this.begin_edit(the_node);\n            }\n        }\n        if (this.get_editable()) {\n            this.view.edit_node_begin(node);\n        } else {\n            logger.error('fail, this mind map is not editable.');\n            return;\n        }\n    }\n    end_edit() {\n        this.view.edit_node_end();\n    }\n    toggle_node(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return;\n            } else {\n                return this.toggle_node(the_node);\n            }\n        }\n        if (node.isroot) {\n            return;\n        }\n        this.view.save_location(node);\n        this.layout.toggle_node(node);\n        this.view.relayout();\n        this.view.restore_location(node);\n    }\n    expand_node(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return;\n            } else {\n                return this.expand_node(the_node);\n            }\n        }\n        if (node.isroot) {\n            return;\n        }\n        this.view.save_location(node);\n        this.layout.expand_node(node);\n        this.view.relayout();\n        this.view.restore_location(node);\n    }\n    collapse_node(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return;\n            } else {\n                return this.collapse_node(the_node);\n            }\n        }\n        if (node.isroot) {\n            return;\n        }\n        this.view.save_location(node);\n        this.layout.collapse_node(node);\n        this.view.relayout();\n        this.view.restore_location(node);\n    }\n    expand_all() {\n        this.layout.expand_all();\n        this.view.relayout();\n    }\n    collapse_all() {\n        this.layout.collapse_all();\n        this.view.relayout();\n    }\n    expand_to_depth(depth) {\n        this.layout.expand_to_depth(depth);\n        this.view.relayout();\n    }\n    _reset() {\n        this.view.reset();\n        this.layout.reset();\n        this.data.reset();\n    }\n    _show(mind, skip_centering) {\n        var m = mind || format.node_array.example;\n        this.mind = this.data.load(m);\n        if (!this.mind) {\n            logger.error('data.load error');\n            return;\n        } else {\n            logger.debug('data.load ok');\n        }\n\n        this.view.load();\n        logger.debug('view.load ok');\n\n        this.layout.layout();\n        logger.debug('layout.layout ok');\n\n        this.view.show(!skip_centering);\n        logger.debug('view.show ok');\n\n        this.invoke_event_handle(EventType.show, { data: [mind] });\n    }\n    show(mind, skip_centering) {\n        this._reset();\n        this._show(mind, skip_centering);\n    }\n    get_meta() {\n        return {\n            name: this.mind.name,\n            author: this.mind.author,\n            version: this.mind.version,\n        };\n    }\n    get_data(data_format) {\n        var df = data_format || 'node_tree';\n        return this.data.get_data(df);\n    }\n    get_root() {\n        return this.mind.root;\n    }\n    get_node(node) {\n        if (Node.is_node(node)) {\n            return node;\n        }\n        return this.mind.get_node(node);\n    }\n    add_node(parent_node, node_id, topic, data, direction) {\n        if (this.get_editable()) {\n            var the_parent_node = this.get_node(parent_node);\n            var dir = Direction.of(direction);\n            if (dir === undefined) {\n                dir = this.layout.calculate_next_child_direction(the_parent_node);\n            }\n            var node = this.mind.add_node(the_parent_node, node_id, topic, data, dir);\n            if (!!node) {\n                this.view.add_node(node);\n                this.layout.layout();\n                this.view.show(false);\n                this.view.reset_node_custom_style(node);\n                this.expand_node(the_parent_node);\n                this.invoke_event_handle(EventType.edit, {\n                    evt: 'add_node',\n                    data: [the_parent_node.id, node_id, topic, data, dir],\n                    node: node_id,\n                });\n            }\n            return node;\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return null;\n        }\n    }\n    insert_node_before(node_before, node_id, topic, data, direction) {\n        if (this.get_editable()) {\n            var the_node_before = this.get_node(node_before);\n            var dir = Direction.of(direction);\n            if (dir === undefined) {\n                dir = this.layout.calculate_next_child_direction(the_node_before.parent);\n            }\n            var node = this.mind.insert_node_before(the_node_before, node_id, topic, data, dir);\n            if (!!node) {\n                this.view.add_node(node);\n                this.layout.layout();\n                this.view.show(false);\n                this.invoke_event_handle(EventType.edit, {\n                    evt: 'insert_node_before',\n                    data: [the_node_before.id, node_id, topic, data, dir],\n                    node: node_id,\n                });\n            }\n            return node;\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return null;\n        }\n    }\n    insert_node_after(node_after, node_id, topic, data, direction) {\n        if (this.get_editable()) {\n            var the_node_after = this.get_node(node_after);\n            var dir = Direction.of(direction);\n            if (dir === undefined) {\n                dir = this.layout.calculate_next_child_direction(the_node_after.parent);\n            }\n            var node = this.mind.insert_node_after(the_node_after, node_id, topic, data, dir);\n            if (!!node) {\n                this.view.add_node(node);\n                this.layout.layout();\n                this.view.show(false);\n                this.invoke_event_handle(EventType.edit, {\n                    evt: 'insert_node_after',\n                    data: [the_node_after.id, node_id, topic, data, dir],\n                    node: node_id,\n                });\n            }\n            return node;\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return null;\n        }\n    }\n    remove_node(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return false;\n            } else {\n                return this.remove_node(the_node);\n            }\n        }\n        if (this.get_editable()) {\n            if (node.isroot) {\n                logger.error('fail, can not remove root node');\n                return false;\n            }\n            var node_id = node.id;\n            var parent_id = node.parent.id;\n            var parent_node = this.get_node(parent_id);\n            this.view.save_location(parent_node);\n            this.view.remove_node(node);\n            this.mind.remove_node(node);\n            this.layout.layout();\n            this.view.show(false);\n            this.view.restore_location(parent_node);\n            this.invoke_event_handle(EventType.edit, {\n                evt: 'remove_node',\n                data: [node_id],\n                node: parent_id,\n            });\n            return true;\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return false;\n        }\n    }\n    update_node(node_id, topic) {\n        if (this.get_editable()) {\n            if (_util.text.is_empty(topic)) {\n                logger.warn('fail, topic can not be empty');\n                return;\n            }\n            var node = this.get_node(node_id);\n            if (!!node) {\n                if (node.topic === topic) {\n                    logger.info('nothing changed');\n                    this.view.update_node(node);\n                    return;\n                }\n                node.topic = topic;\n                this.view.update_node(node);\n                this.layout.layout();\n                this.view.show(false);\n                this.invoke_event_handle(EventType.edit, {\n                    evt: 'update_node',\n                    data: [node_id, topic],\n                    node: node_id,\n                });\n            }\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return;\n        }\n    }\n    move_node(node_id, before_id, parent_id, direction) {\n        if (this.get_editable()) {\n            var node = this.get_node(node_id);\n            var updated_node = this.mind.move_node(node, before_id, parent_id, direction);\n            if (!!updated_node) {\n                this.view.update_node(updated_node);\n                this.layout.layout();\n                this.view.show(false);\n                this.invoke_event_handle(EventType.edit, {\n                    evt: 'move_node',\n                    data: [node_id, before_id, parent_id, direction],\n                    node: node_id,\n                });\n            }\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return;\n        }\n    }\n    select_node(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return;\n            } else {\n                return this.select_node(the_node);\n            }\n        }\n        if (!this.layout.is_visible(node)) {\n            return;\n        }\n        this.mind.selected = node;\n        this.view.select_node(node);\n        this.invoke_event_handle(EventType.select, { evt: 'select_node', data: [], node: node.id });\n    }\n    get_selected_node() {\n        if (!!this.mind) {\n            return this.mind.selected;\n        } else {\n            return null;\n        }\n    }\n    select_clear() {\n        if (!!this.mind) {\n            this.mind.selected = null;\n            this.view.select_clear();\n        }\n    }\n    is_node_visible(node) {\n        return this.layout.is_visible(node);\n    }\n    scroll_node_to_center(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n            } else {\n                this.scroll_node_to_center(the_node);\n            }\n            return;\n        }\n        this.view.center_node(node);\n    }\n    find_node_before(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return;\n            } else {\n                return this.find_node_before(the_node);\n            }\n        }\n        if (node.isroot) {\n            return null;\n        }\n        var n = null;\n        if (node.parent.isroot) {\n            var c = node.parent.children;\n            var prev = null;\n            var ni = null;\n            for (var i = 0; i < c.length; i++) {\n                ni = c[i];\n                if (node.direction === ni.direction) {\n                    if (node.id === ni.id) {\n                        n = prev;\n                    }\n                    prev = ni;\n                }\n            }\n        } else {\n            n = this.mind.get_node_before(node);\n        }\n        return n;\n    }\n    find_node_after(node) {\n        if (!Node.is_node(node)) {\n            var the_node = this.get_node(node);\n            if (!the_node) {\n                logger.error('the node[id=' + node + '] can not be found.');\n                return;\n            } else {\n                return this.find_node_after(the_node);\n            }\n        }\n        if (node.isroot) {\n            return null;\n        }\n        var n = null;\n        if (node.parent.isroot) {\n            var c = node.parent.children;\n            var found = false;\n            var ni = null;\n            for (var i = 0; i < c.length; i++) {\n                ni = c[i];\n                if (node.direction === ni.direction) {\n                    if (found) {\n                        n = ni;\n                        break;\n                    }\n                    if (node.id === ni.id) {\n                        found = true;\n                    }\n                }\n            }\n        } else {\n            n = this.mind.get_node_after(node);\n        }\n        return n;\n    }\n    set_node_color(node_id, bg_color, fg_color) {\n        if (this.get_editable()) {\n            var node = this.mind.get_node(node_id);\n            if (!!node) {\n                if (!!bg_color) {\n                    node.data['background-color'] = bg_color;\n                }\n                if (!!fg_color) {\n                    node.data['foreground-color'] = fg_color;\n                }\n                this.view.reset_node_custom_style(node);\n            }\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return null;\n        }\n    }\n    set_node_font_style(node_id, size, weight, style) {\n        if (this.get_editable()) {\n            var node = this.mind.get_node(node_id);\n            if (!!node) {\n                if (!!size) {\n                    node.data['font-size'] = size;\n                }\n                if (!!weight) {\n                    node.data['font-weight'] = weight;\n                }\n                if (!!style) {\n                    node.data['font-style'] = style;\n                }\n                this.view.reset_node_custom_style(node);\n                this.view.update_node(node);\n                this.layout.layout();\n                this.view.show(false);\n            }\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return null;\n        }\n    }\n    set_node_background_image(node_id, image, width, height, rotation) {\n        if (this.get_editable()) {\n            var node = this.mind.get_node(node_id);\n            if (!!node) {\n                if (!!image) {\n                    node.data['background-image'] = image;\n                }\n                if (!!width) {\n                    node.data['width'] = width;\n                }\n                if (!!height) {\n                    node.data['height'] = height;\n                }\n                if (!!rotation) {\n                    node.data['background-rotation'] = rotation;\n                }\n                this.view.reset_node_custom_style(node);\n                this.view.update_node(node);\n                this.layout.layout();\n                this.view.show(false);\n            }\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return null;\n        }\n    }\n    set_node_background_rotation(node_id, rotation) {\n        if (this.get_editable()) {\n            var node = this.mind.get_node(node_id);\n            if (!!node) {\n                if (!node.data['background-image']) {\n                    logger.error(\n                        'fail, only can change rotation angle of node with background image'\n                    );\n                    return null;\n                }\n                node.data['background-rotation'] = rotation;\n                this.view.reset_node_custom_style(node);\n                this.view.update_node(node);\n                this.layout.layout();\n                this.view.show(false);\n            }\n        } else {\n            logger.error('fail, this mind map is not editable');\n            return null;\n        }\n    }\n    resize() {\n        this.view.resize();\n    }\n    // callback(type ,data)\n    add_event_listener(callback) {\n        if (typeof callback === 'function') {\n            this.event_handles.push(callback);\n        }\n    }\n    clear_event_listener() {\n        this.event_handles = [];\n    }\n    invoke_event_handle(type, data) {\n        var j = this;\n        $.w.setTimeout(function () {\n            j._invoke_event_handle(type, data);\n        }, 0);\n    }\n    _invoke_event_handle(type, data) {\n        var l = this.event_handles.length;\n        for (var i = 0; i < l; i++) {\n            this.event_handles[i](type, data);\n        }\n    }\n\n    static show(options, mind) {\n        logger.warn(\n            '`jsMind.show(options, mind)` is deprecated, please use `jm = new jsMind(options); jm.show(mind);` instead'\n        );\n        var _jm = new jsMind(options);\n        _jm.show(mind);\n        return _jm;\n    }\n}\n"],
  "mappings": "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",
  "names": ["__version__", "String", "prototype", "startsWith", "p", "this", "slice", "length", "Direction", "left", "center", "right", "of", "dir", "parseInt", "toLowerCase", "EventType", "show", "resize", "edit", "select", "LogLevel", "debug", "info", "warn", "error", "disable", "_noop", "logger", "console", "level", "log", "log_level", "$", "w", "d", "document", "g", "id", "getElementById", "c", "tag", "createElement", "t", "n", "hasChildNodes", "firstChild", "nodeValue", "appendChild", "createTextNode", "h", "HTMLElement", "innerHTML", "i", "el", "nodeType", "style", "ownerDocument", "on", "e", "addEventListener", "attachEvent", "window", "util", "file", "read", "file_data", "fn_callback", "reader", "FileReader", "onload", "result", "name", "readAsText", "save", "type", "blob", "Blob", "bb", "BlobBuilder", "MozBlobBuilder", "WebKitBlobBuilder", "MSBlobBuilder", "append", "getBlob", "navigator", "msSaveBlob", "blob_url", "URL", "webkitURL", "createObjectURL", "anchor", "visibility", "href", "download", "body", "evt", "createEvent", "initEvent", "dispatchEvent", "removeChild", "location", "json", "json2string", "JSON", "stringify", "string2json", "json_str", "parse", "merge", "b", "a", "o", "Object", "toString", "call", "uuid", "newid", "Date", "getTime", "Math", "random", "substring", "text", "is_empty", "s", "replace", "default_options", "container", "editable", "theme", "mode", "support_html", "view", "engine", "enable_device_pixel_ratio", "hmargin", "vmargin", "line_width", "line_color", "line_style", "draggable", "hide_scrollbars_when_draggable", "node_overflow", "zoom", "min", "max", "step", "custom_node_render", "expander_style", "layout", "hspace", "vspace", "pspace", "cousin_space", "default_event_handle", "enable_mousedown_handle", "enable_click_handle", "enable_dblclick_handle", "enable_mousewheel_handle", "shortcut", "enable", "handles", "mapping", "addchild", "addbrother", "editnode", "delnode", "toggle", "up", "down", "plugin", "Node", "sId", "iIndex", "sTopic", "oData", "bIsRoot", "oParent", "eDirection", "bExpanded", "index", "topic", "data", "isroot", "parent", "direction", "expanded", "children", "_data", "get_location", "vd", "x", "abs_x", "y", "abs_y", "get_size", "width", "height", "node1", "node2", "i1", "i2", "parent_node", "node", "pid", "Mind", "constructor", "author", "version", "root", "selected", "nodes", "node_id", "_put_node", "idx", "is_node", "push", "_update_index", "node_before", "node_index", "add_node", "the_node", "get_node", "get_node_before", "node_after", "get_node_after", "before_id", "parent_id", "_move_node", "len", "_flow_node_direction", "inherited", "sibling", "si", "splice", "origin_parent", "_move_node_internal", "ci", "remove_node", "node_parent", "k", "sort", "compare", "DEFAULT_META", "format", "node_tree", "example", "meta", "get_mind", "source", "df", "mind", "_parse", "get_data", "_build_node", "node_root", "_extract_data", "set_root", "_extract_subnode", "node_json", "node_data", "node_array", "_array", "reverse", "root_node", "_extract_root", "root_json", "extract_count", "parentid", "node_direction", "sub_extract_count", "_array_node", "freemind", "xml", "xml_doc", "_parse_xml", "xml_root", "_find_root", "_load_node", "xml_lines", "_build_map", "join", "DOMParser", "parseFromString", "ActiveXObject", "async", "loadXML", "childNodes", "tagName", "ns", "xml_node", "getAttribute", "node_topic", "node_folded", "topic_children", "topic_child", "textContent", "_load_attributes", "node_expanded", "node_position", "child", "attr", "attr_data", "pos", "_escape", "_line_regex", "lines", "split", "_fill_nodes", "node_path", "line", "match", "substr", "diff", "pop", "_build_lines", "prefix", "Array", "DataProvider", "jm", "init", "reset", "mind_data", "data_format", "LayoutProvider", "options", "opts", "isside", "bounds", "cache_valid", "children_len", "r", "layout_direction", "layout_offset", "_layout_direction_root", "layout_data", "children_count", "side_index", "_layout_direction_side", "subnode", "offset_x", "offset_y", "outer_height", "left_nodes", "right_nodes", "unshift", "outer_height_left", "_layout_offset_subnodes", "outer_height_right", "total_height", "nodes_count", "node_outer_height", "base_y", "pd", "set_visible", "_should_reserve_cousin_space", "middle_height", "_layout_offset_subnodes_height", "offset_cache", "_offset_", "offset_p", "get_node_offset", "view_data", "pout_cache", "_pout_", "get_node_point_out", "ex_p", "ceil", "get_min_size", "pout", "collapse_node", "expand_node", "part_layout", "invoke_event_handle", "expand_all", "collapse_all", "target_depth", "curr_nodes", "curr_depth", "depth", "expand_to_depth", "root_layout_data", "visible", "SvgGraph", "e_svg", "setAttribute", "size", "line_drawing", "straight", "_line_to", "curved", "_bezier_to", "init_line_render", "createElementNS", "custom_line_render", "drawing", "path", "x1", "y1", "x2", "y2", "ctx", "start_point", "end_point", "element", "clear", "pin", "offset", "color", "dest_canvas_ctx", "callback", "img", "Image", "drawImage", "src", "btoa", "XMLSerializer", "serializeToString", "CanvasGraph", "e_canvas", "className", "canvas_ctx", "getContext", "dpr", "device_pixel_ratio", "scale", "clearRect", "strokeStyle", "lineWidth", "lineCap", "beginPath", "moveTo", "bezierCurveTo", "stroke", "lineTo", "ViewProvider", "e_panel", "e_nodes", "selected_node", "editing_node", "graph", "render_node", "_custom_node_render", "_default_node_render", "zoom_current", "devicePixelRatio", "_initialized", "e_editor", "tabIndex", "v", "event", "keyCode", "edit_node_end", "stopPropagation", "offsetParent", "IntersectionObserver", "entities", "observer", "isIntersecting", "unobserve", "observe", "obj", "event_name", "event_handle", "capture_by_panel", "target", "get_binded_nodeid", "parentElement", "clear_lines", "clear_nodes", "reset_theme", "theme_name", "reset_custom_style", "nodeid", "reset_node_custom_style", "load", "setup_canvas_draggable", "init_nodes", "expand_size", "min_size", "min_width", "min_height", "client_w", "clientWidth", "client_h", "clientHeight", "doc_frag", "createDocumentFragment", "create_node_element", "run_in_c11y_mode_if_needed", "init_nodes_size", "func", "position", "top", "d_e", "expander", "_reset_node_custom_style", "is_visible", "origin_style", "restore_selected_node_custom_style", "clear_selected_node_custom_style", "select_clear", "select_node", "get_editing_node", "is_editing", "ncs", "getComputedStyle", "value", "getPropertyValue", "zIndex", "focus", "update_node", "get_view_offset", "set_size", "_show", "show_nodes", "show_lines", "set_zoom", "e_panel_rect", "getBoundingClientRect", "zoom_center", "panel_scroll_x", "scrollLeft", "panel_scroll_y", "scrollTop", "keep_center", "center_node", "relayout", "_saved_location", "node_element", "view_offset", "get_node_point", "display", "_show_expander", "expander_text", "_get_expander_text", "p_expander", "get_expander_point", "ele", "backgroundColor", "fontSize", "fontWeight", "fontStyle", "backgroundImage", "scaledImageData", "toDataURL", "backgroundSize", "transform", "_offset", "get_node_point_in", "draw_line", "enabled", "dragging", "eventDown", "clientX", "clientY", "eventMove", "scrollBy", "node_center_point", "scrollTo", "zoom_in", "zoom_out", "ShortcutProvider", "_newid", "_mapping", "handle", "handler", "bind", "handle_addchild", "handle_addbrother", "handle_editnode", "handle_delnode", "handle_toggle", "handle_up", "handle_down", "handle_left", "handle_right", "keys", "isArray", "key", "id_generator", "enable_shortcut", "disable_shortcut", "which", "preventDefault", "kc", "metaKey", "ctrlKey", "altKey", "shiftKey", "_jm", "get_selected_node", "begin_edit", "insert_node_after", "toggle_node", "up_node", "find_node_before", "np", "down_node", "find_node_after", "_handle_direction", "floor", "plugin_data", "plugins", "register", "Plugin", "Error", "map", "includes", "apply", "setTimeout", "forEach", "fn_init", "jsMind", "current", "initialized", "event_handles", "opts_layout", "opts_view", "_event_bind", "apply_plugins", "get_editable", "enable_edit", "disable_edit", "get_view_draggable", "enable_view_draggable", "disable_view_draggable", "theme_old", "add_event", "mousedown_handle", "click_handle", "dblclick_handle", "mousewheel_handle", "srcElement", "is_expander", "deltaY", "edit_node_begin", "end_edit", "save_location", "restore_location", "_reset", "skip_centering", "m", "get_meta", "get_root", "the_parent_node", "calculate_next_child_direction", "the_node_before", "insert_node_before", "the_node_after", "_util", "updated_node", "move_node", "scroll_node_to_center", "prev", "ni", "found", "bg_color", "fg_color", "weight", "image", "rotation", "clear_event_listener", "j", "_invoke_event_handle", "l", "static", "_register_plugin"]
}
